!function($){var options={series:{curvedLines:{active:!1,apply:!1,fit:!1,curvePointFactor:20,fitPointDist:void 0}}};jQuery.plot.plugins.push({init:function(plot){function processDatapoints(plot,series,datapoints){var nrPoints=datapoints.points.length/datapoints.pointsize;if(1==series.curvedLines.apply&&void 0===series.originSeries&&nrPoints>1.5)if(series.lines.fill){var pointsTop=calculateCurvePoints(datapoints,series.curvedLines,1),pointsBottom=calculateCurvePoints(datapoints,series.curvedLines,2);datapoints.pointsize=3,datapoints.points=[];for(var j=0,k=0,i=0;i<pointsTop.length||j<pointsBottom.length;)pointsTop[i]==pointsBottom[j]?(datapoints.points[k]=pointsTop[i],datapoints.points[k+1]=pointsTop[i+1],datapoints.points[k+2]=pointsBottom[j+1],j+=2,i+=2):pointsTop[i]<pointsBottom[j]?(datapoints.points[k]=pointsTop[i],datapoints.points[k+1]=pointsTop[i+1],datapoints.points[k+2]=k>0?datapoints.points[k-1]:null,i+=2):(datapoints.points[k]=pointsBottom[j],datapoints.points[k+1]=k>1?datapoints.points[k-2]:null,datapoints.points[k+2]=pointsBottom[j+1],j+=2),k+=3}else series.lines.lineWidth>0&&(datapoints.points=calculateCurvePoints(datapoints,series.curvedLines,1),datapoints.pointsize=2)}function calculateCurvePoints(datapoints,curvedLinesOptions,yPos){var points=datapoints.points,ps=datapoints.pointsize,num=curvedLinesOptions.curvePointFactor*(points.length/ps),xdata=new Array,ydata=new Array,curX=-1,curY=-1,j=0;if(curvedLinesOptions.fit){var fpDist;if(void 0===curvedLinesOptions.fitPointDist){var minX=points[0];fpDist=(points[points.length-ps]-minX)/5e4}else fpDist=curvedLinesOptions.fitPointDist;for(var i=0;i<points.length;i+=ps){var frontX,backX;curY=i+yPos,frontX=points[curX=i]-fpDist,backX=points[curX]+fpDist;for(var factor=2;frontX==points[curX]||backX==points[curX];)frontX=points[curX]-fpDist*factor,backX=points[curX]+fpDist*factor,factor++;xdata[j]=frontX,ydata[j]=points[curY],xdata[++j]=points[curX],ydata[j]=points[curY],xdata[++j]=backX,ydata[j]=points[curY],j++}}else for(i=0;i<points.length;i+=ps)curX=i,curY=i+yPos,xdata[j]=points[curX],ydata[j]=points[curY],j++;var n=xdata.length,y2=new Array,delta=new Array;y2[0]=0,y2[n-1]=0,delta[0]=0;for(i=1;i<n-1;++i){var d=xdata[i+1]-xdata[i-1];if(0==d)return[];var s=(xdata[i]-xdata[i-1])/d,p=s*y2[i-1]+2;y2[i]=(s-1)/p,delta[i]=(ydata[i+1]-ydata[i])/(xdata[i+1]-xdata[i])-(ydata[i]-ydata[i-1])/(xdata[i]-xdata[i-1]),delta[i]=(6*delta[i]/(xdata[i+1]-xdata[i-1])-s*delta[i-1])/p}for(j=n-2;j>=0;--j)y2[j]=y2[j]*y2[j+1]+delta[j];var step=(xdata[n-1]-xdata[0])/(num-1),xnew=new Array,ynew=new Array,result=new Array;for(xnew[0]=xdata[0],ynew[0]=ydata[0],result.push(xnew[0]),result.push(ynew[0]),j=1;j<num;++j){xnew[j]=xnew[0]+j*step;for(var max=n-1,min=0;max-min>1;){var k=Math.round((max+min)/2);xdata[k]>xnew[j]?max=k:min=k}var h=xdata[max]-xdata[min];if(0==h)return[];var a=(xdata[max]-xnew[j])/h,b=(xnew[j]-xdata[min])/h;ynew[j]=a*ydata[min]+b*ydata[max]+((a*a*a-a)*y2[min]+(b*b*b-b)*y2[max])*(h*h)/6,result.push(xnew[j]),result.push(ynew[j])}return result}plot.hooks.processOptions.push((function(plot,options){options.series.curvedLines.active&&plot.hooks.processDatapoints.unshift(processDatapoints)}))},options:options,name:"curvedLines",version:"0.5"})}();