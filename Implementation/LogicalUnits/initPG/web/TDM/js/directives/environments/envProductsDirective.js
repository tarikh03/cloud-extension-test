function environmentProductsDirective(){return{restrict:"E",templateUrl:"views/environments/products/products.html",scope:{content:"="},controller:function($scope,$compile,TDMService,DTColumnBuilder,DTOptionsBuilder,$q,BreadCrumbsService){var environmentProductsCtrl=this;environmentProductsCtrl.environmentID=$scope.content.environmentData.environment_id,environmentProductsCtrl.pageDisplay="productsTable",environmentProductsCtrl.openProducts=function(){environmentProductsCtrl.productsData={openProduct:environmentProductsCtrl.openProduct,openNewProduct:environmentProductsCtrl.openNewProduct,environmentID:environmentProductsCtrl.environmentID,isOwner:$scope.content.environmentData.isOwner},environmentProductsCtrl.pageDisplay="productsTable",BreadCrumbsService.breadCrumbChange(2)},environmentProductsCtrl.openProduct=function(productData){environmentProductsCtrl.productData={productData:productData,environmentID:environmentProductsCtrl.environmentID,environmentName:$scope.content.environmentData.environment_name,openProducts:environmentProductsCtrl.openProducts,openProduct:environmentProductsCtrl.openProduct,isOwner:$scope.content.environmentData.isOwner},environmentProductsCtrl.pageDisplay="product"},environmentProductsCtrl.openNewProduct=function(){environmentProductsCtrl.newProductData={openProducts:environmentProductsCtrl.openProducts,environmentID:environmentProductsCtrl.environmentID,environmentName:$scope.content.environmentData.environment_name,isOwner:$scope.content.environmentData.isOwner},environmentProductsCtrl.pageDisplay="newProduct"},BreadCrumbsService.push({},"PRODUCTS",(function(){environmentProductsCtrl.openProducts()})),environmentProductsCtrl.openProducts()},controllerAs:"envProductsCtrl"}}function environmentNewProductDirective(){return{restrict:"E",templateUrl:"views/environments/products/newProduct.html",scope:{content:"="},controller:function($scope,$compile,TDMService,SweetAlert,BreadCrumbsService,toastr,$timeout,DTColumnBuilder,DTOptionsBuilder,$q,$uibModal){var environmentNewProductCtrl=this;environmentNewProductCtrl.environmentID=$scope.content.environmentID,TDMService.getProducts().then((function(response){if("SUCCESS"==response.errorCode){var allProducts=response.result;TDMService.getEnvProducts(environmentNewProductCtrl.environmentID).then((function(response){var envProducts=response.result;"SUCCESS"==response.errorCode?environmentNewProductCtrl.newEnvProducts=_.reject(allProducts,(function(product){if("Inactive"===product.product_status)return!0;for(var i=0;i<envProducts.length;i++)if(envProducts[i].product_id===product.product_id&&"Active"===envProducts[i].status)return!0;return!1})):toastr.error("Environment # "+environmentNewProductCtrl.environmentID,"Faild to get new products")}))}else toastr.error("Environment # "+environmentNewProductCtrl.environmentID,"Faild to get new products")})),environmentNewProductCtrl.addProduct=function(){var result=!0;if(environmentNewProductCtrl.envProduct.interfaces){for(var i=0;i<environmentNewProductCtrl.envProduct.interfaces.length;i++){var dbInterfaceData=environmentNewProductCtrl.envProduct.interfaces[i];if(!(dbInterfaceData.db_connection_string||dbInterfaceData.db_schema&&dbInterfaceData.db_port&&dbInterfaceData.db_password&&dbInterfaceData.db_host)){result=!1;break}}if(!result)return void SweetAlert.swal({title:"Please Update All DB Interfaces Data"})}TDMService.postEnvProduct(environmentNewProductCtrl.environmentID,$scope.content.environmentName,environmentNewProductCtrl.envProduct).then((function(response){"SUCCESS"==response.errorCode?(toastr.success("System # "+environmentNewProductCtrl.envProduct.product_id,"Created Successfully"),$timeout((function(){$scope.content.openProducts()}),300)):toastr.error("System # "+environmentNewProductCtrl.envProduct.product_id,"Unable to Create : "+response.message)}))},TDMService.getDataCenters().then((function(response){"SUCCESS"==response.errorCode?environmentNewProductCtrl.dataCenters=response.result:toastr.error("System # "+environmentNewProductCtrl.newEnvProduct.product_id,"failed to get data centers")})),environmentNewProductCtrl.productChanged=function(){if(environmentNewProductCtrl.envProduct.product_id){TDMService.getProductInterfaces(environmentNewProductCtrl.envProduct.product_id).then((function(response){if("SUCCESS"==response.errorCode){environmentNewProductCtrl.envProduct.interfaces=response.result;var dbTypes=TDMService.getDBTypes();_.each(environmentNewProductCtrl.envProduct.interfaces,(function(interface1){var db_type=_.find(dbTypes,{db_type_id:interface1.interface_type_id});interface1.interface_type_name=db_type.db_type_name})),environmentNewProductCtrl.getTableData?environmentNewProductCtrl.dtInstance.changeData(environmentNewProductCtrl.getTableData()):environmentNewProductCtrl.DBInterfacesTable()}else toastr.error("System # "+environmentNewProductCtrl.envProduct.product_id,"failed to get interfaces")}));var product=_.find(environmentNewProductCtrl.newEnvProducts,{product_id:environmentNewProductCtrl.envProduct.product_id});product&&(environmentNewProductCtrl.versions=product.product_versions.split(","))}},environmentNewProductCtrl.DBInterfacesTable=function(){environmentNewProductCtrl.loadingTable=!0,environmentNewProductCtrl.dtInstance={},environmentNewProductCtrl.dtColumns=[],environmentNewProductCtrl.dtColumnDefs=[],environmentNewProductCtrl.headers=[{column:"interface_name",name:"Name",clickAble:!1},{column:"interface_type_name",name:"Interface Type",clickAble:!1},{column:"db_schema",name:"Schema",clickAble:!1},{column:"db_port",name:"Port",clickAble:!1},{column:"db_user",name:"User",clickAble:!1},{column:"db_password",name:"Password",clickAble:!1,type:"date"},{column:"db_host",name:"Host",clickAble:!1},{column:"db_connection_string",name:"Connection String",clickAble:!1,type:"date"},{column:"update_db_interface",name:"Update",clickAble:!0}];for(var updateCell=function(data,type,full,meta){return'<img src="icons/edit.svg" alt="edit" ng-click="envNewProductCtrl.openDBInterfaceModal(\''+full.interface_id+"')\">"},i=0;i<environmentNewProductCtrl.headers.length;i++)"update_db_interface"==environmentNewProductCtrl.headers[i].column?environmentNewProductCtrl.dtColumns.push(DTColumnBuilder.newColumn(environmentNewProductCtrl.headers[i].column).withTitle(environmentNewProductCtrl.headers[i].name).renderWith(updateCell).notSortable().withOption("defaultContent"," ")):environmentNewProductCtrl.dtColumns.push(DTColumnBuilder.newColumn(environmentNewProductCtrl.headers[i].column).withTitle(environmentNewProductCtrl.headers[i].name).withOption("defaultContent"," "));environmentNewProductCtrl.getTableData=function(){var deferred=$q.defer();return deferred.resolve(environmentNewProductCtrl.envProduct.interfaces),deferred.promise},environmentNewProductCtrl.dtOptions=DTOptionsBuilder.fromFnPromise((function(){return environmentNewProductCtrl.getTableData()})).withDOM('<"html5buttons"B>lTfgitp').withOption("createdRow",(function(row){$compile(angular.element(row).contents())($scope)})).withOption("scrollX",!1).withButtons([]),environmentNewProductCtrl.dtInstanceCallback=function(dtInstance){angular.isFunction(environmentNewProductCtrl.dtInstance)?environmentNewProductCtrl.dtInstance(dtInstance):angular.isDefined(environmentNewProductCtrl.dtInstance)&&(environmentNewProductCtrl.dtInstance=dtInstance)},null!=environmentNewProductCtrl.dtInstance.changeData&&environmentNewProductCtrl.dtInstance.changeData(environmentNewProductCtrl.getTableData()),$timeout(()=>{environmentNewProductCtrl.loadingTable=!1}),environmentNewProductCtrl.openDBInterfaceModal=function(db_interface_id){var interfaceIndex=_.findIndex(environmentNewProductCtrl.envProduct.interfaces,{interface_id:db_interface_id});if(!(interfaceIndex<0))$uibModal.open({templateUrl:"views/environments/products/dbInterfaceModal.html",resolve:{dbInterface:environmentNewProductCtrl.envProduct.interfaces[interfaceIndex]},controller:function($scope,$uibModalInstance,dbInterface){var dbInterfaceCtrl=this;dbInterfaceCtrl.dbInterfaceData=dbInterface,dbInterfaceCtrl.connectionType=!0,dbInterfaceCtrl.saveDBInterface=function(){$uibModalInstance.close(dbInterfaceCtrl.dbInterfaceData)},dbInterfaceCtrl.testDBInterfaceConn=function(){dbInterfaceCtrl.testDBInterfaceConnResult="Success",console.log("Test done.")},dbInterfaceCtrl.close=function(){$uibModalInstance.close()}},controllerAs:"dbInterfaceCtrl"}).result.then((function(interfaceData){interfaceData&&(environmentNewProductCtrl.envProduct.interfaces[interfaceIndex]=interfaceData,environmentNewProductCtrl.dtInstance.changeData(environmentNewProductCtrl.getTableData()))}))}},BreadCrumbsService.push({},"NEW_PRODUCT",(function(){}))},controllerAs:"envNewProductCtrl"}}function environmentProductsTableDirective(){return{restrict:"E",templateUrl:"views/environments/products/productsTable.html",scope:{content:"="},controller:function($scope,$compile,TDMService,DTColumnBuilder,DTOptionsBuilder,$q,AuthService,toastr){var productsTableCtrl=this;productsTableCtrl.environmentID=$scope.content.environmentID,productsTableCtrl.disableChange=!AuthService.authorizedToEdit(1)||!$scope.content.isOwner,TDMService.getEnvProducts(productsTableCtrl.environmentID).then((function(response){if("SUCCESS"==response.errorCode){productsTableCtrl.products=response.result,productsTableCtrl.dtInstance={},productsTableCtrl.dtColumns=[],productsTableCtrl.dtColumnDefs=[],productsTableCtrl.headers=[{column:"product_name",name:"Name",clickAble:!0},{column:"data_center_name",name:"Data Center Name",clickAble:!1},{column:"product_version",name:"Version",clickAble:!1},{column:"created_by",name:"Created By",clickAble:!1},{column:"creation_date",name:"Creation Date",clickAble:!1,type:"date"},{column:"last_updated_by",name:"Updated By",clickAble:!1},{column:"last_updated_date",name:"Update Date",clickAble:!1,type:"date"},{column:"status",name:"Status",clickAble:!1}];for(var clickAbleColumn=function(data,type,full,meta){return'<a ng-click="envProductsTableCtrl.openProduct('+full.product_id+')">'+data+"</a>"},changeToLocalDate=function(data,type,full,meta){return data?moment(data).format("D MMM YYYY, h:mm"):""},i=0;i<productsTableCtrl.headers.length;i++)1==productsTableCtrl.headers[i].clickAble?productsTableCtrl.dtColumns.push(DTColumnBuilder.newColumn(productsTableCtrl.headers[i].column).withTitle(productsTableCtrl.headers[i].name).renderWith(clickAbleColumn)):"date"==productsTableCtrl.headers[i].type?productsTableCtrl.dtColumns.push(DTColumnBuilder.newColumn(productsTableCtrl.headers[i].column).withTitle(productsTableCtrl.headers[i].name).renderWith(changeToLocalDate)):productsTableCtrl.dtColumns.push(DTColumnBuilder.newColumn(productsTableCtrl.headers[i].column).withTitle(productsTableCtrl.headers[i].name));var getTableData=function(){var deferred=$q.defer();return deferred.resolve(productsTableCtrl.products),deferred.promise};productsTableCtrl.dtOptions=DTOptionsBuilder.fromFnPromise((function(){return getTableData()})).withDOM('<"html5buttons"B>lTfgitp').withOption("createdRow",(function(row){$compile(angular.element(row).contents())($scope)})).withOption("scrollX",!1).withButtons([]).withColumnFilter({aoColumns:[{type:"text",bRegex:!0,bSmart:!0},{type:"text",bRegex:!0,bSmart:!0},{type:"text",bRegex:!0,bSmart:!0},{type:"select",bRegex:!1,values:_.unique(_.map(productsTableCtrl.products,"created_by"))},{type:"text",bRegex:!0,bSmart:!0},{type:"select",bRegex:!1,values:_.unique(_.map(productsTableCtrl.products,"last_updated_by"))},{type:"text",bRegex:!0,bSmart:!0}]}),productsTableCtrl.dtInstanceCallback=function(dtInstance){angular.isFunction(productsTableCtrl.dtInstance)?productsTableCtrl.dtInstance(dtInstance):angular.isDefined(productsTableCtrl.dtInstance)&&(productsTableCtrl.dtInstance=dtInstance)},null!=productsTableCtrl.dtInstance.changeData&&productsTableCtrl.dtInstance.changeData(getTableData()),productsTableCtrl.loadingTable=!1}else toastr.error("Environment # "+productsTableCtrl.environmentID,"Faild to get products")})),productsTableCtrl.openProduct=function(productID){if($scope.content.openProduct){var productData=_.find(productsTableCtrl.products,{product_id:productID});if(productData)return void $scope.content.openProduct(productData)}},productsTableCtrl.openNewProduct=function(){$scope.content.openNewProduct&&$scope.content.openNewProduct()}},controllerAs:"envProductsTableCtrl"}}function environmentProductDirective(){return{restrict:"E",templateUrl:"views/environments/products/product.html",scope:{content:"="},controller:function($scope,$compile,TDMService,BreadCrumbsService,toastr,SweetAlert,AuthService,DTColumnBuilder,DTOptionsBuilder,$q,$uibModal,$timeout){var environmentProductCtrl=this;environmentProductCtrl.envProduct=$scope.content.productData;var dbTypes=TDMService.getDBTypes();_.each(environmentProductCtrl.envProduct.interfaces,(function(interface1){var db_type=_.find(dbTypes,{db_type_id:interface1.interface_type_id});interface1.interface_type_name=db_type.db_type_name})),environmentProductCtrl.environmentID=$scope.content.environmentID,environmentProductCtrl.disableChange="Inactive"==environmentProductCtrl.envProduct.status||!AuthService.authorizedToEdit(1)||!$scope.content.isOwner,TDMService.getDataCenters().then((function(response){"SUCCESS"==response.errorCode?environmentProductCtrl.dataCenters=response.result:toastr.error("System # "+environmentProductCtrl.envProduct.product_name,"failed to get data centers")})),environmentProductCtrl.versions=environmentProductCtrl.envProduct.product_versions.split(","),environmentProductCtrl.updateEnvProduct=function(){TDMService.putEnvProduct(environmentProductCtrl.environmentID,$scope.content.environmentName,environmentProductCtrl.envProduct).then((function(response){"SUCCESS"==response.errorCode?(toastr.success("System # "+environmentProductCtrl.envProduct.product_name,"Updated Successfully"),$timeout((function(){$scope.content.openProducts()}),400)):toastr.error("System # "+environmentProductCtrl.envProduct.product_name,"failed to update")}))},environmentProductCtrl.deleteEnvProduct=function(){SweetAlert.swal({title:"Are you sure you want to remove System "+environmentProductCtrl.envProduct.product_name,type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes",cancelButtonText:"No",closeOnConfirm:!0,closeOnCancel:!0,animation:"false",customClass:"animated fadeInUp"},(function(isConfirm){isConfirm&&TDMService.deleteEnvProduct(environmentProductCtrl.environmentID,$scope.content.environmentName,environmentProductCtrl.envProduct.product_id).then((function(response){"SUCCESS"==response.errorCode?(toastr.success("System # "+environmentProductCtrl.envProduct.product_name,"deleted Successfully"),$timeout((function(){$scope.content.openProducts()}),400)):toastr.error("System # "+environmentProductCtrl.envProduct.product_name,"failed to delete")}))}))},environmentProductCtrl.DBInterfacesTable=function(){environmentProductCtrl.loadingTable=!0,environmentProductCtrl.dtInstance={},environmentProductCtrl.dtColumns=[],environmentProductCtrl.dtColumnDefs=[],environmentProductCtrl.headers=[{column:"interface_name",name:"Name",clickAble:!1},{column:"interface_type_name",name:"Interface Type",clickAble:!1},{column:"db_schema",name:"Schema",clickAble:!1},{column:"db_port",name:"Port",clickAble:!1},{column:"db_user",name:"User",clickAble:!1},{column:"db_password",name:"Password",clickAble:!1,type:"date"},{column:"db_host",name:"Host",clickAble:!1},{column:"db_connection_string",name:"Connection String",clickAble:!1,type:"date"}],environmentProductCtrl.disableChange||environmentProductCtrl.headers.push({column:"update_db_interface",name:"Update",clickAble:!0});for(var updateCell=function(data,type,full,meta){return'<img src="icons/edit.svg" alt="edit"  ng-click="envProductCtrl.openDBInterfaceModal(\''+full.interface_id+"')\">"},i=0;i<environmentProductCtrl.headers.length;i++)"update_db_interface"==environmentProductCtrl.headers[i].column?environmentProductCtrl.dtColumns.push(DTColumnBuilder.newColumn(environmentProductCtrl.headers[i].column).withTitle(environmentProductCtrl.headers[i].name).renderWith(updateCell).notSortable()):environmentProductCtrl.dtColumns.push(DTColumnBuilder.newColumn(environmentProductCtrl.headers[i].column).withTitle(environmentProductCtrl.headers[i].name));var getTableData=function(){var deferred=$q.defer();return deferred.resolve(environmentProductCtrl.envProduct.interfaces),deferred.promise};environmentProductCtrl.dtOptions=DTOptionsBuilder.fromFnPromise((function(){return getTableData()})).withDOM('<"html5buttons"B>lTfgitp').withOption("createdRow",(function(row){$compile(angular.element(row).contents())($scope)})).withOption("scrollX",!1).withButtons([]),environmentProductCtrl.dtInstanceCallback=function(dtInstance){angular.isFunction(environmentProductCtrl.dtInstance)?environmentProductCtrl.dtInstance(dtInstance):angular.isDefined(environmentProductCtrl.dtInstance)&&(environmentProductCtrl.dtInstance=dtInstance)},null!=environmentProductCtrl.dtInstance.changeData&&environmentProductCtrl.dtInstance.changeData(getTableData()),$timeout(()=>{environmentProductCtrl.loadingTable=!1}),environmentProductCtrl.openDBInterfaceModal=function(db_interface_id){var interfaceIndex=_.findIndex(environmentProductCtrl.envProduct.interfaces,{interface_id:db_interface_id});if(!(interfaceIndex<0))$uibModal.open({templateUrl:"views/environments/products/dbInterfaceModal.html",resolve:{dbInterface:environmentProductCtrl.envProduct.interfaces[interfaceIndex]},controller:function($scope,$uibModalInstance,dbInterface){var dbInterfaceCtrl=this;dbInterfaceCtrl.dbInterfaceData=dbInterface,dbInterfaceCtrl.connectionType=!0,dbInterfaceCtrl.saveDBInterface=function(){$uibModalInstance.close(dbInterfaceCtrl.dbInterfaceData)},dbInterfaceCtrl.testDBInterfaceConn=function(){dbInterfaceCtrl.testDBInterfaceConnResult="Success",console.log("Test done.")},dbInterfaceCtrl.close=function(){$uibModalInstance.close()}},controllerAs:"dbInterfaceCtrl"}).result.then((function(interface1){interface1&&(environmentProductCtrl.envProduct.interfaces[interfaceIndex]=interface1,environmentProductCtrl.dtInstance.changeData(getTableData()))}))}},BreadCrumbsService.push({productID:environmentProductCtrl.envProduct.product_name},"PRODUCT_BREADCRUMB",(function(){$scope.content.openProduct(environmentProductCtrl.envProduct)})),environmentProductCtrl.DBInterfacesTable()},controllerAs:"envProductCtrl"}}angular.module("TDM-FE").directive("environmentProductsDirective",environmentProductsDirective).directive("environmentProductsTableDirective",environmentProductsTableDirective).directive("environmentNewProductDirective",environmentNewProductDirective).directive("environmentProductDirective",environmentProductDirective);