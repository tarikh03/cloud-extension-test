function environmentRolesDirective(){return{restrict:"E",templateUrl:"views/environments/roles/roles.html",scope:{content:"="},controller:function($scope,$compile,TDMService,DTColumnBuilder,DTOptionsBuilder,$q,BreadCrumbsService){var environmentRolesCtrl=this;environmentRolesCtrl.environmentID=$scope.content.environmentData.environment_id,environmentRolesCtrl.pageDisplay="rolesTable",environmentRolesCtrl.openRoles=function(){environmentRolesCtrl.rolesData={openRole:environmentRolesCtrl.openRole,openNewRole:environmentRolesCtrl.openNewRole,environmentID:environmentRolesCtrl.environmentID,isOwner:$scope.content.environmentData.isOwner},environmentRolesCtrl.pageDisplay="rolesTable",BreadCrumbsService.breadCrumbChange(2)},environmentRolesCtrl.openRole=function(roleData){environmentRolesCtrl.roleData={roleData:roleData,environment_id:environmentRolesCtrl.environmentID,environment_name:$scope.content.environmentData.environment_name,openRoles:environmentRolesCtrl.openRoles,openRole:environmentRolesCtrl.openRole,isOwner:$scope.content.environmentData.isOwner},environmentRolesCtrl.pageDisplay="role"},environmentRolesCtrl.openNewRole=function(roles){environmentRolesCtrl.newRoleData={roles:roles,openRoles:environmentRolesCtrl.openRoles,environmentID:environmentRolesCtrl.environmentID,environmentName:$scope.content.environmentData.environment_name,isOwner:$scope.content.environmentData.isOwner},environmentRolesCtrl.pageDisplay="newRole"},BreadCrumbsService.push({},"ROLES",(function(){environmentRolesCtrl.openRoles()})),environmentRolesCtrl.openRoles()},controllerAs:"rolesCtrl"}}function environmentNewRoleDirective(){return{restrict:"E",templateUrl:"views/environments/roles/newRole.html",scope:{content:"="},controller:function($scope,TDMService,BreadCrumbsService,toastr,$timeout){var environmentNewRoleCtrl=this;environmentNewRoleCtrl.environmentID=$scope.content.environmentID,environmentNewRoleCtrl.roles=$scope.content.roles,environmentNewRoleCtrl.roleData={allowed_creation_of_synthetic_data:!1,allowed_delete_before_load:!1,allowed_random_entity_selection:!1,allowed_request_of_fresh_data:!1,allowed_task_scheduling:!1,allowed_replace_sequences:!1,allowed_refresh_reference_data:!1,allowed_number_of_entities_to_copy:0,role_description:"",role_name:""},environmentNewRoleCtrl.addRole=function(){if(_.find(environmentNewRoleCtrl.roles,{role_name:environmentNewRoleCtrl.roleData.role_name}))return toastr.error("Role # "+environmentNewRoleCtrl.roleData.role_name+" Already Exists");TDMService.postEnvironmentRole(environmentNewRoleCtrl.environmentID,$scope.content.environmentName,environmentNewRoleCtrl.roleData).then((function(response){"SUCCESS"==response.errorCode?(toastr.success("Role # "+environmentNewRoleCtrl.roleData.role_name,"Created Successfully"),$timeout((function(){$scope.content.openRoles()}),300)):toastr.error("Role # "+environmentNewRoleCtrl.roleData.role_name,"Unable to Create : "+response.message)}))},BreadCrumbsService.push({},"NEW_ROLE",(function(){}))},controllerAs:"environmentNewRoleCtrl"}}function environmentRolesTableDirective(){return{restrict:"E",templateUrl:"views/environments/roles/rolesTable.html",scope:{content:"="},controller:function($scope,$compile,TDMService,DTColumnBuilder,DTOptionsBuilder,$q,AuthService,$timeout){var rolesTableCtrl=this;rolesTableCtrl.environmentID=$scope.content.environmentID,rolesTableCtrl.disableChange=!(AuthService.authorizedToEdit(0)||AuthService.authorizedToEdit(1)&&$scope.content.isOwner),TDMService.getEnvironmentRoles(rolesTableCtrl.environmentID).then((function(response){if("SUCCESS"==response.errorCode){rolesTableCtrl.roles=response.result,rolesTableCtrl.dtInstance={},rolesTableCtrl.dtColumns=[],rolesTableCtrl.dtColumnDefs=[],rolesTableCtrl.headers=[{column:"role_name",name:"Name",clickAble:!0},{column:"role_description",name:"Description",clickAble:!1},{column:"role_creation_date",name:"Creation Date",clickAble:!1,type:"date"},{column:"role_created_by",name:"Created By",clickAble:!1},{column:"role_last_updated_date",name:"Last Update Date",clickAble:!1,type:"date"},{column:"role_last_updated_by",name:"Updated By",clickAble:!1},{column:"role_status",name:"Status",clickAble:!1}];for(var clickAbleColumn=function(data,type,full,meta){return'<a ng-click="rolesTableCtrl.openRole('+full.role_id+')">'+data+"</a>"},changeToLocalDate=function(data,type,full,meta){return moment(data).format("D MMM YYYY, h:mm")},i=0;i<rolesTableCtrl.headers.length;i++)1==rolesTableCtrl.headers[i].clickAble?rolesTableCtrl.dtColumns.push(DTColumnBuilder.newColumn(rolesTableCtrl.headers[i].column).withTitle(rolesTableCtrl.headers[i].name).renderWith(clickAbleColumn)):"date"==rolesTableCtrl.headers[i].type?rolesTableCtrl.dtColumns.push(DTColumnBuilder.newColumn(rolesTableCtrl.headers[i].column).withTitle(rolesTableCtrl.headers[i].name).renderWith(changeToLocalDate)):rolesTableCtrl.dtColumns.push(DTColumnBuilder.newColumn(rolesTableCtrl.headers[i].column).withTitle(rolesTableCtrl.headers[i].name));var getTableData=function(){var deferred=$q.defer();return deferred.resolve(rolesTableCtrl.roles),deferred.promise};rolesTableCtrl.dtOptions=DTOptionsBuilder.fromFnPromise((function(){return getTableData()})).withDOM('<"html5buttons"B>lTfgitp').withOption("createdRow",(function(row){$compile(angular.element(row).contents())($scope)})).withOption("scrollX",!1).withButtons([]).withColumnFilter({aoColumns:[{type:"text",bRegex:!0,bSmart:!0},{type:"text",bRegex:!0,bSmart:!0},{type:"text",bRegex:!0,bSmart:!0},{type:"select",bRegex:!1,values:_.unique(_.map(rolesTableCtrl.roles,"role_created_by"))},{type:"text",bRegex:!0,bSmart:!0},{type:"select",bRegex:!1,values:_.unique(_.map(rolesTableCtrl.roles,"role_last_updated_by"))}]}),rolesTableCtrl.dtInstanceCallback=function(dtInstance){angular.isFunction(rolesTableCtrl.dtInstance)?rolesTableCtrl.dtInstance(dtInstance):angular.isDefined(rolesTableCtrl.dtInstance)&&(rolesTableCtrl.dtInstance=dtInstance)},null!=rolesTableCtrl.dtInstance.changeData&&rolesTableCtrl.dtInstance.changeData(getTableData()),$timeout(()=>{rolesTableCtrl.loadingTable=!1})}})),rolesTableCtrl.openRole=function(roleID){if($scope.content.openRole){var roleData=_.find(rolesTableCtrl.roles,{role_id:roleID});if(roleData)return void $scope.content.openRole(roleData)}},rolesTableCtrl.openNewRole=function(){$scope.content.openNewRole&&$scope.content.openNewRole(rolesTableCtrl.roles)}},controllerAs:"rolesTableCtrl"}}function environmentRoleDirective(){return{restrict:"E",templateUrl:"views/environments/roles/role.html",scope:{content:"="},controller:function($scope,TDMService,BreadCrumbsService,$timeout,toastr,SweetAlert,AuthService){var environmentRoleCtrl=this;environmentRoleCtrl.roleData=$scope.content.roleData,environmentRoleCtrl.environment_id=$scope.content.environment_id,environmentRoleCtrl.disableChange="Inactive"==environmentRoleCtrl.roleData.role_status||!AuthService.authorizedToEdit(1)||!$scope.content.isOwner,TDMService.getTesters(environmentRoleCtrl.environment_id).then((function(response){"SUCCESS"==response.errorCode?(environmentRoleCtrl.allTesters=response.result,TDMService.getEnvironmentRoleTesters(environmentRoleCtrl.environment_id,environmentRoleCtrl.roleData.role_id).then((function(response){"SUCCESS"==response.errorCode?(environmentRoleCtrl.testers=response.result,environmentRoleCtrl.allTesters=environmentRoleCtrl.allTesters.concat(environmentRoleCtrl.testers)):(environmentRoleCtrl.hideUsersInput=!0,toastr.error("Role # "+environmentRoleCtrl.roleData.role_name,"failed to get Role Users : "+response.message))}))):(environmentRoleCtrl.hideUsersInput=!0,toastr.error("Role # "+environmentRoleCtrl.roleData.role_name,"failed to get All Testers : "+response.message))})),environmentRoleCtrl.saveChanges=function(){TDMService.postEnvironmentRoleTesters(environmentRoleCtrl.environment_id,$scope.content.environment_name,environmentRoleCtrl.roleData.role_id,environmentRoleCtrl.roleData.role_name,environmentRoleCtrl.testers).then((function(response){"SUCCESS"==response.errorCode?toastr.success("Role Users # "+environmentRoleCtrl.roleData.role_name,"Updated Successfully"):toastr.error("Role Users # "+environmentRoleCtrl.roleData.role_name,"failed to Update : "+response.message)})),TDMService.updateEnvironmentRole(environmentRoleCtrl.environment_id,$scope.content.environment_name,environmentRoleCtrl.roleData.role_id,environmentRoleCtrl.roleData).then((function(response){"SUCCESS"==response.errorCode?toastr.success("Role # "+environmentRoleCtrl.roleData.role_name,"Updated Successfully"):toastr.error("Role # "+environmentRoleCtrl.roleData.role_name,"failed to Update : "+response.message)}))},environmentRoleCtrl.deleteEnvironmentRole=function(){SweetAlert.swal({title:"Are you sure you want to remove Role "+environmentRoleCtrl.roleData.role_name,type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes",cancelButtonText:"No",closeOnConfirm:!0,closeOnCancel:!0,animation:"false",customClass:"animated fadeInUp"},(function(isConfirm){isConfirm&&TDMService.deleteEnvironmentRole(environmentRoleCtrl.environment_id,$scope.content.environment_name,environmentRoleCtrl.roleData.role_id,environmentRoleCtrl.roleData.role_name).then((function(response){"SUCCESS"==response.errorCode?(toastr.success("Role # "+environmentRoleCtrl.roleData.role_name,"deleted Successfully"),$timeout((function(){$scope.content.openRoles()}),400)):toastr.error("Role # "+environmentRoleCtrl.roleData.role_name,"failed to delete")}))}))},BreadCrumbsService.push({role_name:environmentRoleCtrl.roleData.role_name},"ROLE_BREADCRUMB",(function(){$scope.content.openRole(environmentRoleCtrl.roleData)}))},controllerAs:"environmentRoleCtrl"}}angular.module("TDM-FE").directive("environmentRolesDirective",environmentRolesDirective).directive("environmentRolesTableDirective",environmentRolesTableDirective).directive("environmentNewRoleDirective",environmentNewRoleDirective).directive("environmentRoleDirective",environmentRoleDirective);