function permissionGroupsTableDirective(){return{restrict:"E",templateUrl:"views/permissionGroups/permissionGroupsTable.html",scope:{content:"="},controller:function($scope,$compile,TDMService,DTColumnBuilder,DTOptionsBuilder,$q,$timeout,toastr,$uibModal){var permissionGroupsTableCtrl=this;permissionGroupsTableCtrl.loadingTable=!0,permissionGroupsTableCtrl.initTable=()=>{permissionGroupsTableCtrl.dtInstance={},permissionGroupsTableCtrl.dtColumns=[],permissionGroupsTableCtrl.dtColumnDefs=[],permissionGroupsTableCtrl.headers=[{column:"permission_group",name:"Permission Group",clickAble:!0},{column:"fabric_role",name:"Fabric Role",clickAble:!1},{column:"description",name:"Description",clickAble:!1},{column:"creation_date",name:"Creation Date",clickAble:!1,type:"date"},{column:"created_by",name:"Created By",clickAble:!1},{column:"update_date",name:"Last Update Date",clickAble:!1,type:"date"},{column:"updated_by",name:"Updated By",clickAble:!1}];for(var changeToLocalDate=function(data,type,full,meta){return moment(data).format("DD MMM YYYY, HH:mm")},i=0;i<permissionGroupsTableCtrl.headers.length;i++)"date"==permissionGroupsTableCtrl.headers[i].type?permissionGroupsTableCtrl.dtColumns.push(DTColumnBuilder.newColumn(permissionGroupsTableCtrl.headers[i].column).withTitle(permissionGroupsTableCtrl.headers[i].name).renderWith(changeToLocalDate)):permissionGroupsTableCtrl.dtColumns.push(DTColumnBuilder.newColumn(permissionGroupsTableCtrl.headers[i].column).withTitle(permissionGroupsTableCtrl.headers[i].name));permissionGroupsTableCtrl.dtColumns.unshift(DTColumnBuilder.newColumn("permissionGruopActions").withTitle("").renderWith((function(data,type,full,meta){let message=`The users of ${full.fabric_role} will be removed from their environments and will no longer be owners of TDM environments and their reserved entities need to be released. Are you sure you want to delete the permissions group?`;"tester"===full.permission_group?message=`The users of ${full.fabric_role} will be removed from their environments and will no longer be able to create or execute TDM tasks. Their reserved entities need to be released. Are you sure you want to delete the permissions group?`:"admin"===full.permission_group&&(message=`The users of ${full.fabric_role} will no longer be authorized as TDM admin users and their reserved entities need to be released. Are you sure you want to delete the permission group?`);return`\n                <div style="display: flex;justify-content: space-around;max-width: 100px;">\n                    <div>\n                    <img id="pg_delete_${meta.row}"\n                    style="cursor:pointer"\n                    uib-tooltip="Delete Permission Group Mapping" \n                    tooltip-placement="right" \n                    tooltip-append-to-body="true"\n                    mwl-confirm="" \n                    message="${message}" \n                    confirm-text="Yes <i class='glyphicon glyphicon-ok'</i>" \n                    cancel-text="No <i class='glyphicon glyphicon-remove'></i>" \n                    placement="right" \n                    on-confirm="permissionGroupsTableCtrl.deletePermisionGroup('${full.fabric_role}')" \n                    on-cancel="cancelClicked = true" \n                    confirm-button-type="danger" \n                    cancel-button-type="default" \n                    role-handler="" \n                    role="0"\n                    src="icons/delete-icon.svg"\n                    alt="delete"\n                </img>\n                    </div>\n                    <div>\n                        <img\n                            id="pg_edit_${meta.row}"\n                             src="icons/edit.svg"\n                             alt="edit"\n                            uib-tooltip="Edit Permission Group Mapping" \n                            tooltip-append-to-body="true"\n                            tooltip-placement="right" \n                            role-handler="" role="0" \n                            ng-click="permissionGroupsTableCtrl.openNewPermissionGroupModal('${full.fabric_role}')">\n                    </div>\n                    </div>\n                    `})));var getTableData=function(){var deferred=$q.defer();return deferred.resolve(permissionGroupsTableCtrl.permissionGroupsData),deferred.promise};permissionGroupsTableCtrl.dtOptions=DTOptionsBuilder.fromFnPromise((function(){return getTableData()})).withDOM('<"html5buttons"B>lTfgitp').withOption("createdRow",(function(row){$compile(angular.element(row).contents())($scope)})).withOption("scrollX",!1).withOption("aaSorting",[5,"asc"]).withButtons([]).withOption("search",{caseInsensitive:!1}),permissionGroupsTableCtrl.productsData&&permissionGroupsTableCtrl.productsData.length>0&&permissionGroupsTableCtrl.dtOptions.withLightColumnFilter({0:{type:"select",values:_.map(_.unique(_.map(permissionGroupsTableCtrl.productsData,"permission_group")),(function(el){return{value:el,label:el}}))},1:{type:"select",values:_.map(_.unique(_.map(permissionGroupsTableCtrl.productsData,"fabric_role")),(function(el){return{value:el,label:el}}))},2:{type:"text"},3:{type:"text"},4:{type:"text"},5:{type:"text"},6:{type:"text"}}),permissionGroupsTableCtrl.dtInstanceCallback=function(dtInstance){angular.isFunction(permissionGroupsTableCtrl.dtInstance)?permissionGroupsTableCtrl.dtInstance(dtInstance):angular.isDefined(permissionGroupsTableCtrl.dtInstance)&&(permissionGroupsTableCtrl.dtInstance=dtInstance)},null!=permissionGroupsTableCtrl.dtInstance.changeData&&permissionGroupsTableCtrl.dtInstance.changeData(getTableData()),$timeout(()=>{permissionGroupsTableCtrl.loadingTable=!1})},permissionGroupsTableCtrl.getData=()=>{TDMService.getPermissionGroups().then(response=>{"SUCCESS"==response.errorCode&&(permissionGroupsTableCtrl.permissionGroupsData=response.result,permissionGroupsTableCtrl.dtInstance?permissionGroupsTableCtrl.dtInstance.reloadData((function(data){}),!0):permissionGroupsTableCtrl.initTable())})},permissionGroupsTableCtrl.getData(),permissionGroupsTableCtrl.deletePermisionGroup=fabric_role=>{console.log("delete permission group,"+fabric_role),TDMService.deleteRoleFromPermissionGroup(fabric_role).then(response=>{if("SUCCESS"==response.errorCode){const index=_.findIndex(permissionGroupsTableCtrl.permissionGroupsData,{fabric_role:fabric_role});index>=0&&(permissionGroupsTableCtrl.permissionGroupsData.splice(index,1),permissionGroupsTableCtrl.dtInstance.reloadData((function(data){}),!0))}else toastr.error(response.message)})},permissionGroupsTableCtrl.openNewPermissionGroupModal=fabric_role=>{let row=null;fabric_role&&(row=_.find(permissionGroupsTableCtrl.permissionGroupsData,{fabric_role:fabric_role})),$uibModal.open({templateUrl:"views/permissionGroups/newPermissionGroup.html",resolve:{attachedRoles:()=>_.map(permissionGroupsTableCtrl.permissionGroupsData,"fabric_role")||[],oldRecord:()=>row},controller:function($scope,$uibModalInstance,AuthService,TDMService,toastr,attachedRoles,oldRecord){var newPermisionGroupCtrl=this;oldRecord&&(newPermisionGroupCtrl.edit=!0,newPermisionGroupCtrl.oldPermissionGroup=oldRecord.permission_group,newPermisionGroupCtrl.permissionGroup=oldRecord.permission_group,newPermisionGroupCtrl.fabricRole=oldRecord.fabric_role,newPermisionGroupCtrl.oldfabricRole=oldRecord.fabric_role,newPermisionGroupCtrl.description=oldRecord.description),newPermisionGroupCtrl.permissionGroups=AuthService.getPermissionGroups(),newPermisionGroupCtrl.permissionGroups=_.map(newPermisionGroupCtrl.permissionGroups,permissionGroup=>({name:permissionGroup,value:permissionGroup})),TDMService.getFabricRoles().then(response=>{"SUCCESS"===response.errorCode?newPermisionGroupCtrl.fabricRoles=_.filter(response.result,role=>attachedRoles.indexOf(role)<0||newPermisionGroupCtrl.edit&&role===oldRecord.fabric_role):toastr.error(err.message)}).catch(err=>{toastr.error(err.message)}),newPermisionGroupCtrl.attachRoleToPermissionGroup=()=>{newPermisionGroupCtrl.edit?TDMService.updateRoleToPermissionGroup(newPermisionGroupCtrl.permissionGroup,oldRecord.fabric_role,newPermisionGroupCtrl.fabricRole,newPermisionGroupCtrl.description||"").then(response=>{"SUCCESS"===response.errorCode?($uibModalInstance.close(!0),toastr.success("Updated Mapping Fabric Role and Permission Group Successfully")):toastr.error(err.message)}).catch(err=>{toastr.error(err.message)}):TDMService.attachRoleToPermissionGroup(newPermisionGroupCtrl.permissionGroup,newPermisionGroupCtrl.fabricRole,newPermisionGroupCtrl.description||"").then(response=>{"SUCCESS"===response.errorCode?($uibModalInstance.close(!0),toastr.success("Successfully Added new Mapping")):toastr.error(err.message)}).catch(err=>{toastr.error(err.message)})},newPermisionGroupCtrl.close=function(){$uibModalInstance.close()}},controllerAs:"newPermisionGroupCtrl"}).result.then((function(result){result&&permissionGroupsTableCtrl.getData()}))}},controllerAs:"permissionGroupsTableCtrl"}}angular.module("TDM-FE").directive("permissionGroupsTableDirective",permissionGroupsTableDirective);