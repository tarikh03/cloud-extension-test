function taskMain(){return{restrict:"E",templateUrl:"js/components/task/taskMain/taskMain.html",scope:{content:"="},controller:function($scope,TDMService,BreadCrumbsService,SweetAlert,$uibModal,toastr,$timeout,AuthService,$state,DTOptionsBuilder,DTColumnBuilder,$q,$compile){var taskMainCtrl=this;taskMainCtrl.currentYear=(new Date).getFullYear(),TDMService.getTDMVersion().then(response=>{taskMainCtrl.version=response.result}),taskMainCtrl.widgetRefContent={},taskMainCtrl.editTask="create"!==$scope.content.mode,taskMainCtrl.tasks=$scope.content.tasks,taskMainCtrl.minDate=new Date,taskMainCtrl.minDate=moment(taskMainCtrl.minDate),taskMainCtrl.minDate.milliseconds(0),taskMainCtrl.minDate.seconds(0),taskMainCtrl.minDate.minutes(0),taskMainCtrl.minDate.hours(0),taskMainCtrl.minDate.add(1,"days"),taskMainCtrl.schedulerOptions={formInputClass:"form-control1 cron-gen-input",formSelectClass:"form-control1 cron-gen-select",formRadioClass:"cron-gen-radio",formCheckboxClass:"cron-gen-checkbox",hideMinutesTab:!1,hideHourlyTab:!1,hideDailyTab:!1,hideWeeklyTab:!1,hideMonthlyTab:!1,hideYearlyTab:!1,hideAdvancedTab:!1,use24HourTime:!0,hideSeconds:!1},taskMainCtrl.timeZoneOffset=AuthService.getTimeZone(),taskMainCtrl.stepsNames={1:"GENERAL",2:"Additional Execution Parameters",3:"REQUESTED_ENTITIES",4:"Task Variables",5:"Reference",6:"Task Scheduling"},taskMainCtrl.getStepsArray=function(){var stepsArray=[];return stepsArray.push(1),stepsArray.push(2),"refernceOnly"!==taskMainCtrl.taskData.reference&&stepsArray.push(3),taskMainCtrl.taskData.task_globals&&stepsArray.push(4),null!=taskMainCtrl.taskData.reference&&stepsArray.push(5),stepsArray.push(6),stepsArray},taskMainCtrl.nextStep=()=>{const steps=taskMainCtrl.getStepsArray(),currentStepIndex=steps.indexOf(taskMainCtrl.step);return currentStepIndex>=0&&currentStepIndex<steps.length-1?steps[currentStepIndex+1]:(console.error("There is no next step"),taskMainCtrl.step)},taskMainCtrl.back=()=>{const steps=taskMainCtrl.getStepsArray(),currentStepIndex=steps.indexOf(taskMainCtrl.step);if(currentStepIndex>0){if(3===taskMainCtrl.step&&currentStepIndex<taskMainCtrl.step&&"C"===taskMainCtrl.taskData.selection_method){const params={inputs:(taskMainCtrl.taskData.CustomLogicParams||[]).map(it=>({name:it.name,type:it.type,value:it.value}))};taskMainCtrl.taskData.parameters=JSON.stringify(params)}taskMainCtrl.step=steps[currentStepIndex-1]}else console.error("This is the First Step cannot go back")},taskMainCtrl.getTabSubtitle=()=>{let text="";return"EXTRACT"===taskMainCtrl.taskData.task_type?text="For an Extract Task":"RESERVE"===taskMainCtrl.taskData.task_type?text="For a Reserve Task":"LOAD"===taskMainCtrl.taskData.task_type&&(text=!taskMainCtrl.taskData.load_entity&&taskMainCtrl.taskData.delete_before_load?"For a Delete Task":"For a Load Task"),text},taskMainCtrl.generalNext=function(form,nextStep){taskMainCtrl.editTask&&!taskMainCtrl.copyTask||(_.find(taskMainCtrl.tasks,{task_title:taskMainCtrl.taskData.task_title,task_status:"Active"})?$scope.generalForm.taskTitle.$setValidity("alreadyExist",!1):$scope.generalForm.taskTitle.$setValidity("alreadyExist",!0)),$scope.generalForm.taskLogicalUnit.$setValidity("gap",!0),$scope.generalForm.taskLogicalUnit.$setValidity("missingParent",!0);let isSelectedLU=lu_name=>_.find(taskMainCtrl.taskData.selectedLogicalUnits,{lu_name:lu_name}),checkIfRootIsMissing=()=>{for(lu of($scope.generalForm.taskLogicalUnit.$setValidity("missingParent",!0),taskMainCtrl.taskData.missingRootLU=[],taskMainCtrl.taskData.selectedLogicalUnits))if(lu.lu_parent_name){const luParent=_.find(taskMainCtrl.taskData.allLogicalUnits,{lu_name:lu.lu_parent_name});luParent&&(luParent.lu_parent_name||isSelectedLU(luParent.lu_name)||($scope.generalForm.taskLogicalUnit.$setValidity("missingParent",!1),taskMainCtrl.taskData.missingRootLU.push(luParent.lu_name)))}};taskMainCtrl.taskData.selectedLogicalUnits&&taskMainCtrl.taskData.selectedLogicalUnits.length>0&&taskMainCtrl.taskData.selectedLogicalUnits.forEach(lu=>{(lu=>{if(lu.lu_parent_name&&!isSelectedLU(lu.lu_parent_name)){const luParent=_.find(taskMainCtrl.taskData.allLogicalUnits,{lu_name:lu.lu_parent_name});luParent&&luParent.lu_parent_name&&isSelectedLU(luParent.lu_parent_name)&&($scope.generalForm.taskLogicalUnit.$setValidity("gap",!1),taskMainCtrl.missingUnitInGap=luParent.lu_name)}})(lu),checkIfRootIsMissing()}),form.submitted=!0,form.$valid&&(taskMainCtrl.step=nextStep||taskMainCtrl.nextStep(),getRoleData()),taskMainCtrl.generalForm=form},taskMainCtrl.additionalExecutionParametersNext=function(form,nextStep){form.submitted=!0,form.$valid&&(taskMainCtrl.taskData.replace_sequences&&(taskMainCtrl.taskData.filterout_reserved=!1),taskMainCtrl.step=nextStep||taskMainCtrl.nextStep()),taskMainCtrl.additionalExecutionParametersForm=form},taskMainCtrl.validateData=()=>{let validateReserveEntites=!1,validateVerions=!1;const promises=[];if("LOAD"===taskMainCtrl.taskData.task_type&&taskMainCtrl.taskData.version_ind&&!taskMainCtrl.taskData.selectedVersionToLoad)return new Promise((resolve,reject)=>{reject()});if("EXTRACT"===taskMainCtrl.taskData.task_type||"L"!==taskMainCtrl.taskData.selection_method||taskMainCtrl.taskData.replace_sequences||(validateReserveEntites=!0,promises.push(TDMService.postGenericAPI("validateReservedEntitiesList",{beID:taskMainCtrl.taskData.be_id,envID:taskMainCtrl.taskData.environment_id,listOfEntities:taskMainCtrl.taskData.selection_param_value.split(",").map(it=>({target_entity_id:it}))}))),"LOAD"===taskMainCtrl.taskData.task_type&&taskMainCtrl.taskData.load_entity&&taskMainCtrl.taskData.version_ind&&"ALL"!==taskMainCtrl.taskData.selection_method){if(!taskMainCtrl.taskData.selectedVersionToLoad)return taskMainCtrl.requestedEntitiesForm=$scope.requestedEntitiesForm,$scope.requestedEntitiesForm.submitted=!0,new Promise((resolve,reject)=>{reject()});var selectedVersionToLoad=_.find(taskMainCtrl.taskData.versionsForLoad,{fabric_execution_id:taskMainCtrl.taskData.selectedVersionToLoad}),taskExecutionId="",luNames="";selectedVersionToLoad&&(taskExecutionId=selectedVersionToLoad.task_execution_id,luNames=taskMainCtrl.taskData.versionsForLoad.filter(version=>version.task_execution_id===selectedVersionToLoad.task_execution_id).map(version=>({lu_name:version.lu_name}))),validateVerions=!0,promises.push(TDMService.postGenericAPI("tasks/validateVersionForLoad",{entitiesList:taskMainCtrl.taskData.selection_param_value,taskExecId:taskExecutionId,lu_list:luNames}))}return new Promise((resolve,reject)=>{0!==promises.length?Promise.all(promises).then(results=>{validateVerions&&"FAILED"===results[1].errorCode?SweetAlert.swal({title:`The hierarchy of entities ${results[1].message} has not been created properly in the selected version. Are you sure that you want to select this version?`,text:results[0].message,type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"No",cancelButtonText:"Yes",closeOnConfirm:!0,closeOnCancel:!0,animation:"false",customClass:"animated fadeInUp"},(function(isConfirm){isConfirm?reject():resolve()})):validateReserveEntites&&results[0].message?SweetAlert.swal({title:"The following entities are already reserved by other users. Are you sure that you want to save the task?",text:results[0].message,type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"No",cancelButtonText:"Yes",closeOnConfirm:!0,closeOnCancel:!0,animation:"false",customClass:"animated fadeInUp"},(function(isConfirm){isConfirm?reject():resolve()})):resolve()}):resolve(!0)})},taskMainCtrl.requestedEntitiesNext=function(form,nextStep){if(form.submitted=!0,form.$valid){if("C"===taskMainCtrl.taskData.selection_method){const params={inputs:(taskMainCtrl.taskData.CustomLogicParams||[]).map(it=>it.editor?{name:it.editor.name,type:it.type,value:it.refData.state.values[it.editor.name].value}:{name:it.name,type:it.type,value:it.value})};taskMainCtrl.taskData.parameters=JSON.stringify(params)}if("GENERATE"===taskMainCtrl.taskData.selection_method){taskMainCtrl.taskData.DataManParams={};let pluginsNames=[];taskMainCtrl.widgetRefContent.DataManParamsTemp.refData&&(pluginsNames=taskMainCtrl.widgetRefContent.DataManParamsTemp.refData.state.plugins.map(it=>it.name)),Object.keys(taskMainCtrl.widgetRefContent.DataManParamsTemp).forEach(key=>{taskMainCtrl.taskData.DataManParams[key]=taskMainCtrl.widgetRefContent.DataManParamsTemp[key],pluginsNames.indexOf(key)>=0&&(taskMainCtrl.taskData.DataManParams[key].value=taskMainCtrl.widgetRefContent.DataManParamsTemp.refData.state.values[key].value),taskMainCtrl.taskData.DataManParams[key]&&taskMainCtrl.taskData.DataManParams[key].editor&&delete taskMainCtrl.taskData.DataManParams[key].editor.value}),delete taskMainCtrl.widgetRefContent.DataManParamsTemp.refData,delete taskMainCtrl.taskData.DataManParams.refData}taskMainCtrl.validateData().then(()=>{$timeout(()=>{taskMainCtrl.step=nextStep||taskMainCtrl.nextStep()})}).catch(err=>{})}taskMainCtrl.requestedEntitiesForm=form},taskMainCtrl.referenceNext=function(form,nextStep){form.submitted=!0,form.$setValidity("emptyList",!0),0!=_.filter(taskMainCtrl.taskData.refList,{selected:!0}).length?(taskMainCtrl.ReferenceForm=form,taskMainCtrl.step=nextStep||taskMainCtrl.nextStep()):form.$setValidity("emptyList",!1)},taskMainCtrl.globalsNext=function(form,nextStep){taskMainCtrl.step=nextStep||taskMainCtrl.nextStep(),taskMainCtrl.AddGlobalForm=form},taskMainCtrl.TaskSchedulingNext=(form,nextStep)=>{if(form.$valid||1==taskMainCtrl.disableChange){if(!$scope.generalForm.$valid)return void(taskMainCtrl.step=nextStep||1);if(taskMainCtrl.taskData.reference&&0==_.filter(taskMainCtrl.taskData.refList,{selected:!0}).length)return void(taskMainCtrl.step=nextStep||5);if(!$scope.requestedEntitiesForm.$valid)return void(taskMainCtrl.step=nextStep||3);if(!$scope.additionalExecutionParametersForm.$valid)return void(taskMainCtrl.step=nextStep||2);taskMainCtrl.saveTask()}else form.submitted=!0;taskMainCtrl.TaskSchedulingForm=form},taskMainCtrl.editTask?(taskMainCtrl.taskData=angular.copy($scope.content.task),taskMainCtrl.taskData.env_mask_data=!!taskMainCtrl.taskData.env_mask_data):taskMainCtrl.taskData={filterout_reserved:!0,env_mask_data:!1},taskMainCtrl.submitForm=function(step,nextStep){if(!taskMainCtrl.taskData.allLogicalUnits)return;const steps=taskMainCtrl.getStepsArray();if(step!==nextStep)if(steps.indexOf(step)>steps.indexOf(nextStep))taskMainCtrl.openStep(nextStep,"back");else switch(step){case 1:$scope.generalForm.$setSubmitted(),taskMainCtrl.generalNext($scope.generalForm,nextStep);break;case 2:$scope.additionalExecutionParametersForm.$setSubmitted(),taskMainCtrl.additionalExecutionParametersNext($scope.additionalExecutionParametersForm,nextStep);break;case 3:$scope.requestedEntitiesForm.$setSubmitted(),taskMainCtrl.requestedEntitiesNext($scope.requestedEntitiesForm,nextStep);break;case 4:$scope.AddGlobalForm.$setSubmitted(),taskMainCtrl.globalsNext($scope.AddGlobalForm,nextStep);break;case 5:$scope.ReferenceForm.$setSubmitted(),taskMainCtrl.referenceNext(ReferenceForm,nextStep);break;case 6:$scope.TaskSchedulingForm.$setSubmitted(),taskMainCtrl.TaskSchedulingNext($scope.TaskSchedulingForm,nextStep)}},taskMainCtrl.step=1;var userRole=AuthService.getRole(),username=AuthService.getUsername();taskMainCtrl.copyTask=$scope.content.copy,taskMainCtrl.copyTask&&(taskMainCtrl.taskData.task_title=taskMainCtrl.taskData.task_title+" Copy"),taskMainCtrl.editTask&&("EXTRACT"!==taskMainCtrl.taskData.task_type||taskMainCtrl.taskData.version_ind||taskMainCtrl.taskData.retention_period_value||(taskMainCtrl.taskData.retention_period_value=0),"REF"==taskMainCtrl.taskData.selection_method?taskMainCtrl.taskData.reference="refernceOnly":taskMainCtrl.taskData.refcount>0&&(taskMainCtrl.taskData.reference="both"),taskMainCtrl.taskData.reference&&TDMService.getGenericAPI("task/refsTable/"+taskMainCtrl.taskData.task_id).then((function(response){taskMainCtrl.taskData.refList=_.map(response.result,(function(ref){return ref.selected=!0,ref}))})),taskMainCtrl.disableChange="Inactive"==taskMainCtrl.taskData.task_status||username!=taskMainCtrl.taskData.task_created_by,"Active"===taskMainCtrl.taskData.task_status&&(taskMainCtrl.taskData.owners.indexOf(username)>=0||"admin"==userRole.type)&&(taskMainCtrl.disableChange=!1),taskMainCtrl.copyTask&&(taskMainCtrl.disableChange&&(taskMainCtrl.taskData.environment_id=null,taskMainCtrl.taskData.source_environment_id=null),taskMainCtrl.disableChange=!1),TDMService.getGenericAPI("task/"+taskMainCtrl.taskData.task_id+"/globals").then((function(response){taskMainCtrl.taskData.globals=_.map(response.result,(global,index)=>(global.index=index,global))})),TDMService.getTaskPostExecutionProcesses(taskMainCtrl.taskData.task_id).then((function(response){"SUCCESS"==response.errorCode?taskMainCtrl.taskData.postExecutionProcesses=_.map(response.result,v=>parseInt(v.process_id)):toastr.error("Task # "+taskMainCtrl.taskData.task_id,"Failed to get Task Post Execution Processes")}))),taskMainCtrl.referenceChange=function(){"refernceOnly"==taskMainCtrl.taskData.reference&&(taskMainCtrl.taskData.selectAllEntites=!1)},taskMainCtrl.taskData.delete_before_load&&taskMainCtrl.taskData.load_entity?taskMainCtrl.taskData.operationMode="delete_and_load_entity":!taskMainCtrl.taskData.delete_before_load&&taskMainCtrl.taskData.load_entity?taskMainCtrl.taskData.operationMode="insert_entity_without_delete":taskMainCtrl.taskData.delete_before_load&&!taskMainCtrl.taskData.load_entity?taskMainCtrl.taskData.operationMode="delete_without_load_entity":taskMainCtrl.taskData.operationMode="insert_entity_without_delete",TDMService.getFabricRolesforUser(AuthService.getUserId()).then(response=>{taskMainCtrl.userFabricRoles=response.result||[]}),taskMainCtrl.userRoleType=userRole.type,taskMainCtrl.entitiesListChange=function(){taskMainCtrl.entitiesListChangeTimeout&&$timeout.cancel(taskMainCtrl.entitiesListChangeTimeout),"LOAD"==taskMainCtrl.taskData.task_type&&taskMainCtrl.taskData.version_ind&&!taskMainCtrl.taskData.selectAllEntites&&(taskMainCtrl.entitiesListChangeTimeout=$timeout((function(){taskMainCtrl.getVersionsForLoad()}),1e3))},taskMainCtrl.saveTask=function(){if(taskMainCtrl.saveInProgress)return;if(taskMainCtrl.saveInProgress=!0,taskMainCtrl.taskData.CustomLogicParams&&delete taskMainCtrl.taskData.CustomLogicParams,!("P"!==taskMainCtrl.taskData.selection_method&&"PR"!==taskMainCtrl.taskData.selection_method||taskMainCtrl.taskData.parameters&&"()"!=taskMainCtrl.taskData.selection_param_value))return taskMainCtrl.parametersError=!0,void(taskMainCtrl.step=3);if(taskMainCtrl.taskData.scheduling_end_date&&taskMainCtrl.taskData.scheduling_end_date.hours(12),"LOAD"==taskMainCtrl.taskData.task_type&&taskMainCtrl.taskData.version_ind&&"refernceOnly"!==taskMainCtrl.taskData.reference&&taskMainCtrl.taskData.selectedVersionToLoad){if(!(selectedVersionToLoad=_.find(taskMainCtrl.taskData.versionsForLoad,{fabric_execution_id:taskMainCtrl.taskData.selectedVersionToLoad})))return taskMainCtrl.step=2,void(taskMainCtrl.createTaskInProgress=!1);taskMainCtrl.taskData.selected_version_task_name=selectedVersionToLoad.version_name;var localTimeZone=(version_datetime=new Date(selectedVersionToLoad.version_datetime)).getTimezoneOffset();version_datetime=version_datetime.getTime(),taskMainCtrl.taskData.selected_version_datetime=moment(version_datetime).format("YYYYMMDDHHmmss"),taskMainCtrl.taskData.selected_version_task_exe_id=selectedVersionToLoad.task_execution_id}if("LOAD"==taskMainCtrl.taskData.task_type&&taskMainCtrl.taskData.version_ind&&("refernceOnly"==taskMainCtrl.taskData.reference||"both"==taskMainCtrl.taskData.reference)){if(!taskMainCtrl.taskData.refLoadVersions)return taskMainCtrl.step=6,void(taskMainCtrl.createTaskInProgress=!1);var selectedVersionToLoad;if(selectedVersionToLoad=_.find(taskMainCtrl.taskData.refLoadVersions,{task_execution_id:parseInt(taskMainCtrl.taskData.selectedRefVersionToLoad)})){taskMainCtrl.taskData.selected_ref_version_task_name=selectedVersionToLoad.version_name;var version_datetime;localTimeZone=(version_datetime=new Date(selectedVersionToLoad.version_datetime)).getTimezoneOffset();version_datetime=version_datetime.getTime()+6e4*localTimeZone,taskMainCtrl.taskData.selected_ref_version_datetime=moment(version_datetime-6e4*taskMainCtrl.timeZoneOffset).format("YYYYMMDDHHmmss"),taskMainCtrl.taskData.selected_ref_version_task_exe_id=selectedVersionToLoad.task_execution_id}}if("EXTRACT"===taskMainCtrl.taskData.task_type&&taskMainCtrl.taskData.version_ind||void 0!==taskMainCtrl.taskData.retention_period_value||(delete taskMainCtrl.taskData.retention_period_type,delete taskMainCtrl.taskData.retention_period_value),taskMainCtrl.taskData.selectAllEntites&&(taskMainCtrl.taskData.selection_param_value=null),"L"!==taskMainCtrl.taskData.selection_method||"LOAD"===taskMainCtrl.taskData.task_type&&!taskMainCtrl.taskData.version_ind||"refernceOnly"===taskMainCtrl.taskData.reference||(taskMainCtrl.taskData.num_of_entities=taskMainCtrl.taskData.selection_param_value.split(",").length),"ALL"===taskMainCtrl.taskData.selection_method&&("LOAD"!==taskMainCtrl.taskData.task_type||taskMainCtrl.taskData.version_ind)&&"refernceOnly"!==taskMainCtrl.taskData.reference){const selectedVersionToLoad=_.find(taskMainCtrl.taskData.versionsForLoad,{fabric_execution_id:taskMainCtrl.taskData.selectedVersionToLoad});selectedVersionToLoad&&(taskMainCtrl.taskData.num_of_entities=selectedVersionToLoad.num_of_succeeded_entities)}taskMainCtrl.taskData.globals&&0==taskMainCtrl.taskData.globals.length&&(taskMainCtrl.taskData.task_globals=!1),taskMainCtrl.taskData.reference||(taskMainCtrl.taskData.refList=[]),taskMainCtrl.taskData.refList&&taskMainCtrl.taskData.refList.length>0&&(taskMainCtrl.taskData.refresh_reference_data=!1),taskMainCtrl.copyTask&&(taskMainCtrl.taskData.copy=!0),taskMainCtrl.taskData.version_ind?"EXTRACT"===taskMainCtrl.taskData.task_type&&(taskMainCtrl.taskData.sync_mode=null):(taskMainCtrl.taskData.selected_version_task_name=null,taskMainCtrl.taskData.selected_version_datetime=null,taskMainCtrl.taskData.selected_version_task_exe_id=null,taskMainCtrl.taskData.selected_ref_version_task_name=null,taskMainCtrl.taskData.selected_ref_version_datetime=null,taskMainCtrl.taskData.selected_ref_version_task_exe_id=null),"EXTRACT"===taskMainCtrl.taskData.task_type&&(taskMainCtrl.taskData.filterout_reserved=!1),taskMainCtrl.taskData.scheduler||(taskMainCtrl.taskData.scheduler="immediate"),"refernceOnly"==taskMainCtrl.taskData.reference&&"LOAD"===taskMainCtrl.taskData.task_type&&(taskMainCtrl.taskData.sync_mode="FORCE"),("RESERVE"===taskMainCtrl.taskData.task_type||taskMainCtrl.taskData.delete_before_load&&!taskMainCtrl.taskData.load_entity||"LOAD"===taskMainCtrl.taskData.task_type&&"OFF"===taskMainCtrl.taskData.sync_mode)&&(taskMainCtrl.taskData.mask_sensitive_data=!1),delete taskMainCtrl.taskData.extractSelected;let apiCall=null;apiCall=taskMainCtrl.editTask?TDMService.updateTask(taskMainCtrl.taskData):TDMService.createTask(taskMainCtrl.taskData),apiCall.then((function(response){taskMainCtrl.taskData.copy=!1,"SUCCESS"==response.errorCode?(TDMService.postTaskLogicalUnits(response.result.id,taskMainCtrl.taskData.task_title,{logicalUnits:taskMainCtrl.taskData.selectedLogicalUnits}).then((function(response){"SUCCESS"==response.errorCode?(toastr.success("Task # "+taskMainCtrl.taskData.task_title," Is Updated Successfully"),$timeout((function(){taskMainCtrl.saveInProgress=!1,$state.go("tasks",{},{reload:!0})}),300)):(taskMainCtrl.saveInProgress=!1,toastr.error("Task # "+taskMainCtrl.taskData.task_id," Failed to Update : "+response.message))})),taskMainCtrl.taskData.postExecutionProcesses.length>0&&TDMService.postTaskPostExecutionProcess(response.result.id,taskMainCtrl.taskData.task_title,{postexecutionprocesses:_.filter(taskMainCtrl.taskData.allPostExecutionProcess,v=>taskMainCtrl.taskData.postExecutionProcesses.indexOf(v.process_id)>=0)}).then((function(response){"SUCCESS"!==response.errorCode&&toastr.error("Task # "+createTaskResult.id," Failed to Update Post Execution Processes: "+response.message)}))):(taskMainCtrl.saveInProgress=!1,toastr.error("Task # "+taskMainCtrl.taskData.task_id," Failed to Update : "+response.message))}))},taskMainCtrl.deleteTask=function(){TDMService.deleteTask(taskMainCtrl.taskData).then((function(response){"SUCCESS"==response.errorCode?(toastr.success("Task # "+taskMainCtrl.taskData.task_id,"deleted Successfully"),$timeout((function(){$scope.content.openTasks(!0)}),400)):toastr.error("Task # "+taskMainCtrl.taskData.task_id,"failed to delete")}))},taskMainCtrl.checkMigrateStatus=function(){if(!taskMainCtrl.requestedEntities.entities_list||!taskMainCtrl.selectedVersionToLoad)return taskMainCtrl.requestedEntitiesForm=$scope.requestedEntitiesForm,void($scope.requestedEntitiesForm.submitted=!0);var selectedVersionToLoad=_.find(taskMainCtrl.taskData.versionsForLoad,{fabric_execution_id:taskMainCtrl.selectedVersionToLoad}),taskExecutionId="",luNames="";selectedVersionToLoad&&(taskExecutionId=selectedVersionToLoad.task_execution_id,luNames=selectedVersionToLoad.lu_name);var version_datetime=new Date(selectedVersionToLoad.version_datetime),localTimeZone=version_datetime.getTimezoneOffset();version_datetime=version_datetime.getTime()+6e4*localTimeZone,TDMService.postGenericAPI("checkMigrateStatusForEntitiesList",{entitlesList:taskMainCtrl.requestedEntities.entities_list,taskExecutionId:taskExecutionId,luList:luNames}).then((function(response){if("SUCCESS"==response.errorCode){var failedEntities=[];for(var key in response.result)"false"==response.result[key]&&failedEntities.push(key);failedEntities.length>0?toastr.error("Entities "+failedEntities+" were not migrated successfully into the TDM storage by the selected version. Please remove them from the Entities List or select another version "):taskMainCtrl.requestedEntitiesNext($scope.requestedEntitiesForm,!0)}else toastr.error("Failed to check Migrate Status For Entites List")}))},taskMainCtrl.openStep=function(step,type){if("admin"==taskMainCtrl.userRoleType||taskMainCtrl.sourceEnvOwner&&taskMainCtrl.targetEnvOwner||(taskMainCtrl.taskData.selectAllEntites=!1),2==taskMainCtrl.step&&"LOAD"==taskMainCtrl.taskData.task_type&&taskMainCtrl.taskData.version_ind&&!taskMainCtrl.taskData.selectAllEntites)return"back"==type&&null!=taskMainCtrl.taskData.reference?taskMainCtrl.step=6:1==step?taskMainCtrl.step=1:void taskMainCtrl.checkMigrateStatus();var arraySteps=taskMainCtrl.getStepsArray(),nextStep=step,currentIndex=arraySteps.indexOf(taskMainCtrl.step),nextIndex=arraySteps.indexOf(step);if(nextIndex<currentIndex&&nextIndex>=0)return nextStep=arraySteps[nextIndex],void(taskMainCtrl.step=nextStep);if("next"==type){if(currentIndex==arraySteps.length-1)return void console.log("there is no next");nextStep=arraySteps[currentIndex+1]}else if("back"==type)return 0==currentIndex?void console.log("there is no back"):(nextStep=arraySteps[currentIndex-1],void(taskMainCtrl.step=nextStep));return 1==taskMainCtrl.step?$scope.generalForm.$valid?void taskMainCtrl.generalNext($scope.generalForm,nextStep):(taskMainCtrl.generalForm=$scope.generalForm,void($scope.generalForm.submitted=!0)):2==taskMainCtrl.step?$scope.requestedEntitiesForm.$valid?(taskMainCtrl.requestedEntitiesNext($scope.requestedEntitiesForm,!1,nextStep),void($scope.requestedEntitiesForm.submitted=!0)):(taskMainCtrl.requestedEntitiesForm=$scope.requestedEntitiesForm,void($scope.requestedEntitiesForm.submitted=!0)):3!=taskMainCtrl.step||$scope.requestParametersForm.$valid?4!=taskMainCtrl.step||$scope.executionTimingForm.$valid?6!=taskMainCtrl.step||$scope.ReferenceForm.$valid?void(5!=taskMainCtrl.step?(taskMainCtrl.step=nextStep,1==taskMainCtrl.step?$scope.generalForm.submitted=!0:2==taskMainCtrl.step?($scope.getEntitesCount(),taskMainCtrl.updateParams(()=>{console.log("parameters loaded")}),$scope.requestedEntitiesForm.submitted=!0):3==taskMainCtrl.step?$scope.requestParametersForm.submitted=!0:4==taskMainCtrl.step&&($scope.executionTimingForm.submitted=!0)):taskMainCtrl.globalsNext(nextStep)):($scope.ReferenceForm.submitted=!0,void taskMainCtrl.referenceNext(nextStep)):(taskMainCtrl.executionTimingForm=$scope.executionTimingForm,void($scope.executionTimingForm.submitted=!0)):(taskMainCtrl.requestParametersForm=$scope.requestParametersForm,void($scope.requestParametersForm.submitted=!0))};const getRoleForUserInEnv=(environment_id,source)=>new Promise((resolve,reject)=>{TDMService.getRoleForUserInEnv(environment_id).then((function(response){if("SUCCESS"==response.errorCode){source?taskMainCtrl.sourceUserRole=response.result.userRole:taskMainCtrl.userRole=response.result.userRole,"LOAD"==taskMainCtrl.taskData.task_type&&taskMainCtrl.userRole&&taskMainCtrl.sourceUserRole&&taskMainCtrl.userRole.allowed_entity_versioning&&taskMainCtrl.sourceUserRole.allowed_entity_versioning||"EXTRACT"==taskMainCtrl.taskData.task_type&&taskMainCtrl.sourceUserRole&&taskMainCtrl.sourceUserRole.allowed_entity_versioning?taskMainCtrl.allowed_entity_versioning=!0:(taskMainCtrl.allowed_entity_versioning=!1,taskMainCtrl.taskData.version_ind=!1);var minRead=response.result.minRead,minWrite=response.result.minWrite;"RESERVE"===taskMainCtrl.taskData.task_type&&taskMainCtrl.userRole&&(minWrite=taskMainCtrl.userRole.allowed_number_of_reserved_entities),(minRead>-1||minWrite>-1)&&(minWrite=parseInt(minWrite||"0"),minRead=parseInt(minRead||"0"),source?(taskMainCtrl.sourceMaxToCopy=minRead,taskMainCtrl.maxToCopy>minRead?taskMainCtrl.maxToCopy=minRead:taskMainCtrl.maxToCopy||(taskMainCtrl.maxToCopy=minRead)):(taskMainCtrl.targetMaxToCopy=minWrite,taskMainCtrl.maxToCopy>minWrite?taskMainCtrl.maxToCopy=minWrite:taskMainCtrl.maxToCopy||(taskMainCtrl.maxToCopy=minWrite))),taskMainCtrl.taskData.reserve_ind&&"RESERVE"!==taskMainCtrl.taskData.task_type&&taskMainCtrl.userRole&&taskMainCtrl.maxToCopy>taskMainCtrl.userRole.allowed_number_of_reserved_entities&&taskMainCtrl.userRole.allowed_number_of_reserved_entities>-1&&(taskMainCtrl.maxToCopy=taskMainCtrl.userRole.allowed_number_of_reserved_entities),resolve(!0)}else toastr.error("Task # "+taskMainCtrl.taskData.task_id,"Faild to get Role for user "),reject()}))}),getEnvironmentOwners=(environment_id,source)=>new Promise((resolve,reject)=>{TDMService.getEnvironmentOwners(environment_id).then(response=>{if("SUCCESS"==response.errorCode){var ownerFound=_.find(response.result,{user_id:AuthService.getUserId()});if(!ownerFound)for(let i=0;i<taskMainCtrl.userFabricRoles.length&&!(ownerFound=_.find(response.result,{user_type:"GROUP",user_id:taskMainCtrl.userFabricRoles[i]}));i++);let userRoleField="userRole";source&&(userRoleField="sourceUserRole"),ownerFound?(taskMainCtrl[userRoleField]={},taskMainCtrl[userRoleField].allowed_random_entity_selection=!0,taskMainCtrl[userRoleField].allowed_creation_of_synthetic_data=!0,taskMainCtrl[userRoleField].allowed_refresh_reference_data=!0,taskMainCtrl[userRoleField].allowed_request_of_fresh_data=!0,taskMainCtrl[userRoleField].allowed_delete_before_load=!0,taskMainCtrl[userRoleField].allowed_task_scheduling=!0,taskMainCtrl[userRoleField].allowed_replace_sequences=!0,taskMainCtrl.taskData.num_of_entities=parseInt(taskMainCtrl.taskData.num_of_entities),source?taskMainCtrl.sourceEnvOwner=!0:taskMainCtrl.targetEnvOwner=!0,resolve(!0)):(source?taskMainCtrl.sourceEnvOwner=!1:taskMainCtrl.targetEnvOwner=!1,resolve(!1))}else toastr.error("Environment # "+environment_id||taskMainCtrl.taskData.environment_id,"failed to get owners : "+response.message),reject()})}),getRoleData=()=>{if("admin"==userRole.type)taskMainCtrl.userRole={},taskMainCtrl.userRole.allowed_random_entity_selection=!0,taskMainCtrl.userRole.allowed_creation_of_synthetic_data=!0,taskMainCtrl.userRole.allowed_refresh_reference_data=!0,taskMainCtrl.userRole.allowed_request_of_fresh_data=!0,taskMainCtrl.userRole.allowed_delete_before_load=!0,taskMainCtrl.userRole.allowed_task_scheduling=!0,taskMainCtrl.userRole.allowed_replace_sequences=!0,taskMainCtrl.maxToCopy=null,taskMainCtrl.taskData.num_of_entities=parseInt(taskMainCtrl.taskData.num_of_entities);else{const promises=[];("GENERATE"===taskMainCtrl.taskData.task_type||"EXTRACT"===taskMainCtrl.taskData.task_type||"LOAD"===taskMainCtrl.taskData.task_type&&taskMainCtrl.taskData.load_entity)&&promises.push(getEnvironmentOwners(taskMainCtrl.taskData.source_environment_id,!0)),"EXTRACT"!==taskMainCtrl.taskData.task_type&&taskMainCtrl.taskData.environment_id&&promises.push(getEnvironmentOwners(taskMainCtrl.taskData.environment_id,!1)),Promise.all(promises).then(result=>{const rolePromises=[];("EXTRACT"===taskMainCtrl.taskData.task_type||"GENERATE"===taskMainCtrl.taskData.task_type||"LOAD"===taskMainCtrl.taskData.task_type&&taskMainCtrl.taskData.load_entity)&&!taskMainCtrl.sourceEnvOwner&&rolePromises.push(getRoleForUserInEnv(taskMainCtrl.taskData.source_environment_id,!0)),Promise.all(rolePromises).then(roleResult=>{"EXTRACT"!==taskMainCtrl.taskData.task_type&&!taskMainCtrl.targetEnvOwner&&taskMainCtrl.taskData.environment_id?getRoleForUserInEnv(taskMainCtrl.taskData.environment_id,!1).then(roleResult=>{console.log("got Role results")}):console.log("got Role results")})})}};BreadCrumbsService.push({task_id:taskMainCtrl.taskData.task_title},"TASK_BREADCRUMB",(function(){}))},controllerAs:"taskMainCtrl"}}angular.module("TDM-FE").directive("taskMain",taskMain);