{
    "levels": [
        {
            "stages": [
                {
                    "name": "Input",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "MessageType",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "JobId",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "TopicName",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Op TS",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "RegexOrCode",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "ReasonMessage",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Message",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "NotUpdated",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "boolean"
                                        },
                                        "const": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "boolean"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "If ERROR Log",
                    "dependsOnList": [
                        "Input"
                    ],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "If ERRORED",
                            "condition": "result",
                            "actorType": {
                                "parentType": "Equals",
                                "inputs": [
                                    {
                                        "name": "b",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "ERRORED"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "DB_LOG_ERRORED_MESSAGES",
                            "actorType": {
                                "parentType": "MQFabricSetRead",
                                "inputs": [
                                    {
                                        "name": "globalName",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "DB_LOG_ERRORED_MESSAGES"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Column error_message",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "error_message"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Column known_regex",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "known_regex"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Column topic_name",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "topic_name"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "If FILTERED Log",
                    "dependsOnList": [
                        "Input"
                    ],
                    "isLast": 0,
                    "isTransactional": false,
                    "hasElse": true,
                    "actors": [
                        {
                            "name": "DB_LOG_FILTERED_MESSAGES",
                            "actorType": {
                                "parentType": "MQFabricSetRead",
                                "inputs": [
                                    {
                                        "name": "globalName",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "DB_LOG_FILTERED_MESSAGES"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Column filter_description",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "filter_description"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Column filter_code",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "filter_code"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Column object_name",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "object_name"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Check Value",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "ToPublish",
                            "condition": "result",
                            "actorType": {
                                "parentType": "Equals",
                                "inputs": [
                                    {
                                        "name": "b",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "TRUE"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "MQ Keyspace",
                            "actorType": {
                                "parentType": "MQKeyspace",
                                "inputs": [],
                                "outputs": []
                            }
                        },
                        {
                            "name": "DB_LOG_INTERFACE",
                            "actorType": {
                                "parentType": "MQFabricSetRead",
                                "inputs": [
                                    {
                                        "name": "globalName",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "DB_LOG_INTERFACE"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Current TS",
                            "actorType": {
                                "parentType": "Now",
                                "inputs": [],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Check if TS = null",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "TS or Now()",
                            "actorType": {
                                "parentType": "IfElse",
                                "inputs": [],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Date & Time",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "Get Date",
                            "actorType": {
                                "parentType": "DateFormat",
                                "inputs": [
                                    {
                                        "name": "format",
                                        "const": "yyyy-MM-dd"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Get Time",
                            "actorType": {
                                "parentType": "DateFormat",
                                "inputs": [
                                    {
                                        "name": "format",
                                        "const": "HH:mm:ss"
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Update",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "Insert DB",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": null
                                    },
                                    {
                                        "name": "sql",
                                        "const": "insert into ${@keyspace}.mq_message_${@type} (job_id,${@objectNameCol},ts_date,ts_time,message_content,${@regexOrCodeCol},${@infoCol},uuid) values (${jobId},${topicName},'${@tsDate}','${@tsTime}',${messageContent},${regexOrCodeVal},${infoVal},uuid())"
                                    },
                                    {
                                        "name": "keyspace",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "jobId",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "messageContent",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "type",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "topicName",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "tsDate",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "tsTime",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "infoCol",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "regexOrCodeVal",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "infoVal",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "regexOrCodeCol",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "objectNameCol",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Updated",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "boolean"
                                        },
                                        "const": true
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "boolean"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        }
    ],
    "connections": [
        {
            "leftPort": {
                "actor": "MessageType",
                "name": "value"
            },
            "rightPort": {
                "actor": "Insert DB",
                "name": "type"
            }
        },
        {
            "leftPort": {
                "actor": "MessageType",
                "name": "value"
            },
            "rightPort": {
                "actor": "If ERRORED",
                "name": "a"
            }
        },
        {
            "leftPort": {
                "actor": "JobId",
                "name": "value"
            },
            "rightPort": {
                "actor": "Insert DB",
                "name": "jobId"
            }
        },
        {
            "leftPort": {
                "actor": "JobId",
                "name": "value"
            },
            "rightPort": {
                "actor": "DB_LOG_ERRORED_MESSAGES",
                "name": "jobId"
            }
        },
        {
            "leftPort": {
                "actor": "JobId",
                "name": "value"
            },
            "rightPort": {
                "actor": "DB_LOG_FILTERED_MESSAGES",
                "name": "jobId"
            }
        },
        {
            "leftPort": {
                "actor": "JobId",
                "name": "value"
            },
            "rightPort": {
                "actor": "DB_LOG_INTERFACE",
                "name": "jobId"
            }
        },
        {
            "leftPort": {
                "actor": "JobId",
                "name": "value"
            },
            "rightPort": {
                "actor": "MQ Keyspace",
                "name": "jobId"
            }
        },
        {
            "leftPort": {
                "actor": "TopicName",
                "name": "value"
            },
            "rightPort": {
                "actor": "Insert DB",
                "name": "topicName"
            }
        },
        {
            "leftPort": {
                "actor": "Op TS",
                "name": "value"
            },
            "rightPort": {
                "actor": "TS or Now()",
                "name": "test"
            }
        },
        {
            "leftPort": {
                "actor": "Op TS",
                "name": "value"
            },
            "rightPort": {
                "actor": "TS or Now()",
                "name": "a"
            }
        },
        {
            "leftPort": {
                "actor": "RegexOrCode",
                "name": "value"
            },
            "rightPort": {
                "actor": "Insert DB",
                "name": "regexOrCodeVal"
            }
        },
        {
            "leftPort": {
                "actor": "ReasonMessage",
                "name": "value"
            },
            "rightPort": {
                "actor": "Insert DB",
                "name": "infoVal"
            }
        },
        {
            "leftPort": {
                "actor": "Message",
                "name": "value"
            },
            "rightPort": {
                "actor": "Insert DB",
                "name": "messageContent"
            }
        },
        {
            "leftPort": {
                "actor": "DB_LOG_ERRORED_MESSAGES",
                "name": "result"
            },
            "rightPort": {
                "actor": "ToPublish",
                "name": "a"
            }
        },
        {
            "leftPort": {
                "actor": "Column error_message",
                "name": "value"
            },
            "rightPort": {
                "actor": "Insert DB",
                "name": "infoCol"
            }
        },
        {
            "leftPort": {
                "actor": "Column known_regex",
                "name": "value"
            },
            "rightPort": {
                "actor": "Insert DB",
                "name": "regexOrCodeCol"
            }
        },
        {
            "leftPort": {
                "actor": "Column topic_name",
                "name": "value"
            },
            "rightPort": {
                "actor": "Insert DB",
                "name": "objectNameCol"
            }
        },
        {
            "leftPort": {
                "actor": "DB_LOG_FILTERED_MESSAGES",
                "name": "result"
            },
            "rightPort": {
                "actor": "ToPublish",
                "name": "a"
            }
        },
        {
            "leftPort": {
                "actor": "Column filter_description",
                "name": "value"
            },
            "rightPort": {
                "actor": "Insert DB",
                "name": "infoCol"
            }
        },
        {
            "leftPort": {
                "actor": "Column filter_code",
                "name": "value"
            },
            "rightPort": {
                "actor": "Insert DB",
                "name": "regexOrCodeCol"
            }
        },
        {
            "leftPort": {
                "actor": "Column object_name",
                "name": "value"
            },
            "rightPort": {
                "actor": "Insert DB",
                "name": "objectNameCol"
            }
        },
        {
            "leftPort": {
                "actor": "MQ Keyspace",
                "name": "keyspace"
            },
            "rightPort": {
                "actor": "Insert DB",
                "name": "keyspace"
            }
        },
        {
            "leftPort": {
                "actor": "DB_LOG_INTERFACE",
                "name": "result"
            },
            "rightPort": {
                "actor": "Insert DB",
                "name": "interface"
            }
        },
        {
            "leftPort": {
                "actor": "Current TS",
                "name": "timestamp"
            },
            "rightPort": {
                "actor": "TS or Now()",
                "name": "b"
            }
        },
        {
            "leftPort": {
                "actor": "TS or Now()",
                "name": "result"
            },
            "rightPort": {
                "actor": "Get Date",
                "name": "date"
            }
        },
        {
            "leftPort": {
                "actor": "TS or Now()",
                "name": "result"
            },
            "rightPort": {
                "actor": "Get Time",
                "name": "date"
            }
        },
        {
            "leftPort": {
                "actor": "Get Date",
                "name": "string"
            },
            "rightPort": {
                "actor": "Insert DB",
                "name": "tsDate"
            }
        },
        {
            "leftPort": {
                "actor": "Get Time",
                "name": "string"
            },
            "rightPort": {
                "actor": "Insert DB",
                "name": "tsTime"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "messageType"
            },
            "rightPort": {
                "actor": "MessageType",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "jobId"
            },
            "rightPort": {
                "actor": "JobId",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "topicName"
            },
            "rightPort": {
                "actor": "TopicName",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "ts"
            },
            "rightPort": {
                "actor": "Op TS",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "regexOrCode"
            },
            "rightPort": {
                "actor": "RegexOrCode",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "reasonMessage"
            },
            "rightPort": {
                "actor": "ReasonMessage",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "message"
            },
            "rightPort": {
                "actor": "Message",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "NotUpdated",
                "name": "value"
            },
            "rightPort": {
                "actor": "flowArgs",
                "name": "updated"
            }
        },
        {
            "leftPort": {
                "actor": "Updated",
                "name": "value"
            },
            "rightPort": {
                "actor": "flowArgs",
                "name": "updated"
            }
        }
    ]
}