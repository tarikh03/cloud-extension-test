{
    "levels": [
        {
            "stages": [
                {
                    "name": "Input",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "JobId",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "TopicName",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "CounterType",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "ReadCounterRetry",
                            "actorType": {
                                "parentType": "FabricSetRead",
                                "inputs": [
                                    {
                                        "name": "key",
                                        "const": "MQ_DB_COUNTER_RETRY"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "ReturnError",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "const": -1
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Globals",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "DB_LOG_INTERFACE",
                            "actorType": {
                                "parentType": "MQFabricSetRead",
                                "inputs": [
                                    {
                                        "name": "globalName",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "DB_LOG_INTERFACE"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Get MQKeyspace",
                            "actorType": {
                                "parentType": "MQKeyspace",
                                "inputs": [],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Counter Update Loop",
                            "actorType": {
                                "parentType": "ForLoop",
                                "inputs": [
                                    {
                                        "name": "from",
                                        "const": 0
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Update",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "GetCurrentValue",
                            "actorType": {
                                "parentType": "InnerFlow",
                                "inputs": [
                                    {
                                        "name": "flowName",
                                        "const": "bwMQGetCounter"
                                    },
                                    {
                                        "name": "jobId",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "topicName",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "counterType",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "currentValue",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "IterationInd",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "CheckIfExist",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "Increment",
                            "actorType": {
                                "parentType": "MathAdd",
                                "inputs": [
                                    {
                                        "name": "b",
                                        "const": 1
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "IncrementInDB",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "UpdateCounter",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": null
                                    },
                                    {
                                        "name": "sql",
                                        "const": "update ${@keyspace}.mq_counters set counter_value = ${newValue} where job_id=${jobId} and topic_name=${topicName} and counter_type=${counterType} if counter_value=${oldValue}"
                                    },
                                    {
                                        "name": "keyspace",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "jobId",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "counterType",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "oldValue",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "newValue",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "topicName",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "[applied]": {}
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "CheckResult",
                    "dependsOnList": [],
                    "isLast": 1,
                    "actors": [
                        {
                            "name": "Updated?",
                            "condition": "result",
                            "actorType": {
                                "parentType": "Equals",
                                "inputs": [
                                    {
                                        "name": "b",
                                        "schema": {
                                            "type": "boolean"
                                        },
                                        "const": true
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "ReturnNewValue",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "integer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "ExitOnUpdate",
                            "actorType": {
                                "parentType": "LoopStop",
                                "inputs": [],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "PrintError",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "IfNotUpdated",
                            "condition": "result",
                            "actorType": {
                                "parentType": "NotEquals",
                                "inputs": [
                                    {
                                        "name": "b",
                                        "schema": {
                                            "type": "boolean"
                                        },
                                        "const": true
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Error",
                            "actorType": {
                                "parentType": "MQLog",
                                "inputs": [
                                    {
                                        "name": "functionName",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "bwMQIncreaseCounter"
                                    },
                                    {
                                        "name": "message",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "Can not update counter in DB"
                                    },
                                    {
                                        "name": "logLevel",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": "error"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "ErrorUpdate",
                            "actorType": {
                                "parentType": "Fail",
                                "inputs": [
                                    {
                                        "name": "message",
                                        "const": "Could not update counter in DB"
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        }
    ],
    "connections": [
        {
            "leftPort": {
                "actor": "JobId",
                "name": "value"
            },
            "rightPort": {
                "actor": "GetCurrentValue",
                "name": "jobId"
            }
        },
        {
            "leftPort": {
                "actor": "JobId",
                "name": "value"
            },
            "rightPort": {
                "actor": "UpdateCounter",
                "name": "jobId"
            }
        },
        {
            "leftPort": {
                "actor": "JobId",
                "name": "value"
            },
            "rightPort": {
                "actor": "Error",
                "name": "jobId"
            }
        },
        {
            "leftPort": {
                "actor": "JobId",
                "name": "value"
            },
            "rightPort": {
                "actor": "DB_LOG_INTERFACE",
                "name": "jobId"
            }
        },
        {
            "leftPort": {
                "actor": "JobId",
                "name": "value"
            },
            "rightPort": {
                "actor": "Get MQKeyspace",
                "name": "jobId"
            }
        },
        {
            "leftPort": {
                "actor": "TopicName",
                "name": "value"
            },
            "rightPort": {
                "actor": "GetCurrentValue",
                "name": "topicName"
            }
        },
        {
            "leftPort": {
                "actor": "TopicName",
                "name": "value"
            },
            "rightPort": {
                "actor": "UpdateCounter",
                "name": "topicName"
            }
        },
        {
            "leftPort": {
                "actor": "CounterType",
                "name": "value"
            },
            "rightPort": {
                "actor": "GetCurrentValue",
                "name": "counterType"
            }
        },
        {
            "leftPort": {
                "actor": "CounterType",
                "name": "value"
            },
            "rightPort": {
                "actor": "UpdateCounter",
                "name": "counterType"
            }
        },
        {
            "leftPort": {
                "actor": "ReadCounterRetry",
                "name": "result"
            },
            "rightPort": {
                "actor": "Counter Update Loop",
                "name": "to"
            }
        },
        {
            "leftPort": {
                "actor": "DB_LOG_INTERFACE",
                "name": "result"
            },
            "rightPort": {
                "actor": "UpdateCounter",
                "name": "interface"
            }
        },
        {
            "leftPort": {
                "actor": "Get MQKeyspace",
                "name": "keyspace"
            },
            "rightPort": {
                "actor": "UpdateCounter",
                "name": "keyspace"
            }
        },
        {
            "leftPort": {
                "actor": "Counter Update Loop",
                "name": "i"
            },
            "rightPort": {
                "actor": "IterationInd",
                "name": "value"
            },
            "iterate": "Iterate"
        },
        {
            "leftPort": {
                "actor": "GetCurrentValue",
                "name": "currentValue"
            },
            "rightPort": {
                "actor": "Increment",
                "name": "a"
            }
        },
        {
            "leftPort": {
                "actor": "GetCurrentValue",
                "name": "currentValue"
            },
            "rightPort": {
                "actor": "UpdateCounter",
                "name": "oldValue"
            }
        },
        {
            "leftPort": {
                "actor": "Increment",
                "name": "result"
            },
            "rightPort": {
                "actor": "UpdateCounter",
                "name": "newValue"
            }
        },
        {
            "leftPort": {
                "actor": "Increment",
                "name": "result"
            },
            "rightPort": {
                "actor": "ReturnNewValue",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "UpdateCounter",
                "name": "result"
            },
            "rightPort": {
                "actor": "Updated?",
                "name": "a"
            },
            "iterate": "First",
            "path": [
                "[applied]"
            ]
        },
        {
            "leftPort": {
                "actor": "Updated?",
                "name": "result"
            },
            "rightPort": {
                "actor": "IfNotUpdated",
                "name": "a"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "jobId"
            },
            "rightPort": {
                "actor": "JobId",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "topicName"
            },
            "rightPort": {
                "actor": "TopicName",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "counterType"
            },
            "rightPort": {
                "actor": "CounterType",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "ReturnError",
                "name": "value"
            },
            "rightPort": {
                "actor": "flowArgs",
                "name": "newValue"
            }
        },
        {
            "leftPort": {
                "actor": "ReturnNewValue",
                "name": "value"
            },
            "rightPort": {
                "actor": "flowArgs",
                "name": "newValue"
            }
        }
    ]
}