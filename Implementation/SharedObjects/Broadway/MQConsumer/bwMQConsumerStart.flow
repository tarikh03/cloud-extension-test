{
    "tags": [
        "MQConsumer"
    ],
    "levels": [
        {
            "stages": [
                {
                    "name": "Input",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "LU Name",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "JobId",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Affinity",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Read mTable For Job",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "mtMQTopics",
                            "actorType": {
                                "parentType": "MTableLookup",
                                "inputs": [
                                    {
                                        "name": "mtable",
                                        "const": "mtMQTopics"
                                    },
                                    {
                                        "name": "JobId",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "JobId": {
                                                        "type": "string"
                                                    },
                                                    "TopicName": {
                                                        "type": "string"
                                                    },
                                                    "ERRORED_MSGS_THRESHOLD": {
                                                        "type": "string"
                                                    },
                                                    "CONSUMERS_COUNT": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "StringFormat2",
                            "actorType": {
                                "parentType": "StringFormat",
                                "inputs": [
                                    {
                                        "name": "format",
                                        "const": "affinity = '${MQ_JOB_AFFINITY}'"
                                    },
                                    {
                                        "name": "MQ_JOB_AFFINITY",
                                        "schema": {},
                                        "mandatory": false
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Iterate Over Topics",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "NextTopic",
                            "actorType": {
                                "parentType": "Const",
                                "inputs": [
                                    {
                                        "name": "value",
                                        "const": null
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "value",
                                        "schema": {
                                            "type": "object",
                                            "properties": {
                                                "JobId": {
                                                    "type": "string"
                                                },
                                                "TopicName": {
                                                    "type": "string"
                                                },
                                                "ERRORED_MSGS_THRESHOLD": {
                                                    "type": "string"
                                                },
                                                "CONSUMERS_COUNT": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Check Affinity",
                            "actorType": {
                                "parentType": "IfElse",
                                "inputs": [
                                    {
                                        "name": "a",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "b",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "const": ""
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Loop For Topic Consumers",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "CONSUMERS_COUNT",
                            "actorType": {
                                "parentType": "ForLoop",
                                "inputs": [
                                    {
                                        "name": "from",
                                        "const": 0
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Start BW Jobs",
                    "dependsOnList": [],
                    "isLast": 1,
                    "actors": [
                        {
                            "name": "startjob",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "fabric"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "startjob BROADWAY_JOB NAME='${@LU_NAME}.bwMQConsumer_${@CONSUMER_JOB_ID}.flow' uid='${@topicName}_${@partitionId}' ${@affinity} ARGS='{\"jobId\": \"${@CONSUMER_JOB_ID}\", \"topicName\":\"${@topicName}\",\"partitionNumber\":\"${@partitionId}\"}'"
                                    },
                                    {
                                        "name": "LU_NAME",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "CONSUMER_JOB_ID",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "topicName",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "partitionId",
                                        "schema": {
                                            "type": "integer"
                                        },
                                        "mandatory": false
                                    },
                                    {
                                        "name": "affinity",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "Type": {
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "type": "string"
                                                    },
                                                    "UID": {
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "type": "string"
                                                    },
                                                    "Notes": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Fin",
                    "dependsOnList": [],
                    "isLast": 1,
                    "actors": []
                }
            ]
        }
    ],
    "connections": [
        {
            "leftPort": {
                "actor": "LU Name",
                "name": "value"
            },
            "rightPort": {
                "actor": "startjob",
                "name": "LU_NAME"
            }
        },
        {
            "leftPort": {
                "actor": "JobId",
                "name": "value"
            },
            "rightPort": {
                "actor": "mtMQTopics",
                "name": "JobId"
            }
        },
        {
            "leftPort": {
                "actor": "JobId",
                "name": "value"
            },
            "rightPort": {
                "actor": "startjob",
                "name": "CONSUMER_JOB_ID"
            }
        },
        {
            "leftPort": {
                "actor": "Affinity",
                "name": "value"
            },
            "rightPort": {
                "actor": "Check Affinity",
                "name": "test"
            }
        },
        {
            "leftPort": {
                "actor": "Affinity",
                "name": "value"
            },
            "rightPort": {
                "actor": "startjob",
                "name": "MQ_JOB_AFFINITY"
            }
        },
        {
            "leftPort": {
                "actor": "Affinity",
                "name": "value"
            },
            "rightPort": {
                "actor": "StringFormat2",
                "name": "MQ_JOB_AFFINITY"
            }
        },
        {
            "leftPort": {
                "actor": "mtMQTopics",
                "name": "result"
            },
            "rightPort": {
                "actor": "NextTopic",
                "name": "value"
            },
            "iterate": "Iterate"
        },
        {
            "leftPort": {
                "actor": "StringFormat2",
                "name": "string"
            },
            "rightPort": {
                "actor": "Check Affinity",
                "name": "a"
            }
        },
        {
            "leftPort": {
                "actor": "NextTopic",
                "name": "value"
            },
            "rightPort": {
                "actor": "CONSUMERS_COUNT",
                "name": "to"
            },
            "path": [
                "CONSUMERS_COUNT"
            ]
        },
        {
            "leftPort": {
                "actor": "NextTopic",
                "name": "value"
            },
            "rightPort": {
                "actor": "startjob",
                "name": "topicName"
            },
            "path": [
                "TopicName"
            ]
        },
        {
            "leftPort": {
                "actor": "Check Affinity",
                "name": "result"
            },
            "rightPort": {
                "actor": "startjob",
                "name": "affinity"
            }
        },
        {
            "leftPort": {
                "actor": "CONSUMERS_COUNT",
                "name": "i"
            },
            "rightPort": {
                "actor": "startjob",
                "name": "partitionId"
            },
            "iterate": "Iterate"
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "LU_NAME"
            },
            "rightPort": {
                "actor": "LU Name",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "CONSUMER_JOB_ID"
            },
            "rightPort": {
                "actor": "JobId",
                "name": "value"
            }
        },
        {
            "leftPort": {
                "actor": "flowArgs",
                "name": "MQ_JOB_AFFINITY"
            },
            "rightPort": {
                "actor": "Affinity",
                "name": "value"
            }
        }
    ]
}